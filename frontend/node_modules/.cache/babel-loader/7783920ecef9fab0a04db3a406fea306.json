{"ast":null,"code":"import React from\"react\";import Graph from\"../Visualizer/Graph/GraphVisualizer\";import LinkedList from\"../Visualizer/LinkedList/LinkedListVisualizer\";import Tree from\"../Visualizer/Tree/TreeVisualizer\";/*\n  AlgoTab passes current tabKey \n  so Algorithm knows which component to render \n  */var Algorithm=function Algorithm(props){//Selected Algo Component is stored into this variable\nvar selectedAlgo=null;//Conditional Rendering\nswitch(props.algoKey){case\"Graph\":selectedAlgo=/*#__PURE__*/React.createElement(Graph,null);break;case\"LinkedList\":selectedAlgo=/*#__PURE__*/React.createElement(LinkedList,null);break;case\"Tree\":selectedAlgo=/*#__PURE__*/React.createElement(Tree,null);break;default:selectedAlgo=/*#__PURE__*/React.createElement(\"h1\",null,\"Warning something went wrong!!!\");}return/*#__PURE__*/React.createElement(\"div\",null,selectedAlgo);};export default Algorithm;","map":{"version":3,"sources":["/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/src/components/AlgoTab/Algorithm.jsx"],"names":["React","Graph","LinkedList","Tree","Algorithm","props","selectedAlgo","algoKey"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qCAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,+CAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mCAAjB,CAEA;AACA;AACA;AACA,IACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B;AACA,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CAEA;AACA,OAAQD,KAAK,CAACE,OAAd,EACE,IAAK,OAAL,CACED,YAAY,cAAG,oBAAC,KAAD,MAAf,CACA,MACF,IAAK,YAAL,CACEA,YAAY,cAAG,oBAAC,UAAD,MAAf,CACA,MACF,IAAK,MAAL,CACEA,YAAY,cAAG,oBAAC,IAAD,MAAf,CACA,MACF,QACEA,YAAY,cAAG,gEAAf,CAXJ,CAcA,mBAAO,+BAAMA,YAAN,CAAP,CACD,CApBD,CAsBA,cAAeF,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport Graph from \"../Visualizer/Graph/GraphVisualizer\";\nimport LinkedList from \"../Visualizer/LinkedList/LinkedListVisualizer\";\nimport Tree from \"../Visualizer/Tree/TreeVisualizer\";\n\n/*\n  AlgoTab passes current tabKey \n  so Algorithm knows which component to render \n  */\nconst Algorithm = (props) => {\n  //Selected Algo Component is stored into this variable\n  let selectedAlgo = null;\n\n  //Conditional Rendering\n  switch (props.algoKey) {\n    case \"Graph\":\n      selectedAlgo = <Graph />;\n      break;\n    case \"LinkedList\":\n      selectedAlgo = <LinkedList />;\n      break;\n    case \"Tree\":\n      selectedAlgo = <Tree />;\n      break;\n    default:\n      selectedAlgo = <h1>Warning something went wrong!!!</h1>;\n  }\n\n  return <div>{selectedAlgo}</div>;\n};\n\nexport default Algorithm;\n"]},"metadata":{},"sourceType":"module"}