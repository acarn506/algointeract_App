{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/d3Node/D3Node.jsx\";\nimport React, { useState } from 'react';\nimport { Graph } from \"react-d3-graph\";\nimport Input from '../Input/Input';\n\nconst D3Node = props => {\n  const [data, setData] = useState({\n    nodes: [{\n      id: \"Harry\"\n    }, {\n      id: \"Sally\"\n    }, {\n      id: \"Alice\"\n    }],\n    links: [{\n      source: \"Harry\",\n      target: \"Sally\"\n    }, {\n      source: \"Harry\",\n      target: \"Alice\"\n    }]\n  });\n\n  const createNode = name => {\n    setData({\n      nodes: [...data.nodes, {\n        id: name\n      }],\n      links: [...data.links, {\n        source: name,\n        target: \"Sally\"\n      }]\n    });\n  };\n\n  const [myConfig, setMyConfig] = useState({\n    nodeHighlightBehavior: true,\n    height: window.innerHeight * 0.811,\n    width: window.innerWidth,\n    node: {\n      color: \"lightgreen\",\n      size: 500,\n      highlightStrokeColor: \"blue\",\n      symbolType: \"\"\n    },\n    link: {\n      highlightColor: \"lightblue\"\n    }\n  });\n\n  const handleConfig = (color, shape) => {\n    setMyConfig({ ...myConfig.nodeHighlightBehavior,\n      ...myConfig.height,\n      ...myConfig.width,\n      node: {\n        color: color,\n        ...myConfig.size,\n        ...myConfig.highlightStrokeColor,\n        symbolType: shape\n      },\n      link: { ...myConfig.highlightColor\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    class: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Graph, {\n    id: \"graph-id\",\n    data: data,\n    config: myConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Input, {\n    createNode: createNode,\n    handleConfig: handleConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nexport default D3Node;","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/d3Node/D3Node.jsx"],"names":["React","useState","Graph","Input","D3Node","props","data","setData","nodes","id","links","source","target","createNode","name","myConfig","setMyConfig","nodeHighlightBehavior","height","window","innerHeight","width","innerWidth","node","color","size","highlightStrokeColor","symbolType","link","highlightColor","handleConfig","shape"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAkB;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAlB,EAAmC;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAnC,CADwB;AAE/BC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KADK,EAEL;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAFK;AAFwB,GAAD,CAAhC;;AAQA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3BP,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAE,CAAC,GAAGF,IAAI,CAACE,KAAT,EAAgB;AAACC,QAAAA,EAAE,EAAEK;AAAL,OAAhB,CADD;AAENJ,MAAAA,KAAK,EAAE,CACL,GAAGJ,IAAI,CAACI,KADH,EAEL;AAAEC,QAAAA,MAAM,EAAEG,IAAV;AAAgBF,QAAAA,MAAM,EAAE;AAAxB,OAFK;AAFD,KAAD,CAAP;AAOD,GARD;;AAUA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACvCgB,IAAAA,qBAAqB,EAAE,IADgB;AAEvCC,IAAAA,MAAM,EAAEC,MAAM,CAACC,WAAP,GAAqB,KAFU;AAGvCC,IAAAA,KAAK,EAAEF,MAAM,CAACG,UAHyB;AAIvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,YADH;AAEJC,MAAAA,IAAI,EAAE,GAFF;AAGJC,MAAAA,oBAAoB,EAAE,MAHlB;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAJiC;AAUvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,cAAc,EAAE;AADZ;AAViC,GAAD,CAAxC;;AAeE,QAAMC,YAAY,GAAG,CAACN,KAAD,EAAQO,KAAR,KAAkB;AACrCf,IAAAA,WAAW,CAAC,EACV,GAAGD,QAAQ,CAACE,qBADF;AAEV,SAAGF,QAAQ,CAACG,MAFF;AAGV,SAAGH,QAAQ,CAACM,KAHF;AAIVE,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEA,KADH;AAEJ,WAAGT,QAAQ,CAACU,IAFR;AAGJ,WAAGV,QAAQ,CAACW,oBAHR;AAIJC,QAAAA,UAAU,EAAEI;AAJR,OAJI;AAUVH,MAAAA,IAAI,EAAE,EACJ,GAAGb,QAAQ,CAACc;AADR;AAVI,KAAD,CAAX;AAcD,GAfD;;AAiBF,SACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAEvB,IAA3B;AAAiC,IAAA,MAAM,EAAES,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEF,UAAnB;AAA+B,IAAA,YAAY,EAAEiB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA1DD;;AA4DA,eAAe1B,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Graph } from \"react-d3-graph\";\nimport Input from '../Input/Input'\n\nconst D3Node = (props) => {\n  \n  const [data, setData] = useState({\n    nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n    links: [\n      { source: \"Harry\", target: \"Sally\" },\n      { source: \"Harry\", target: \"Alice\" }\n    ]\n}); \n\n  const createNode = (name) => {\n    setData({\n      nodes: [...data.nodes, {id: name}],\n      links: [\n        ...data.links,\n        { source: name, target: \"Sally\" }\n      ]\n    })\n  }\n\n  const [myConfig, setMyConfig] = useState({\n    nodeHighlightBehavior: true,\n    height: window.innerHeight * 0.811,\n    width: window.innerWidth,\n    node: {\n      color: \"lightgreen\",\n      size: 500,\n      highlightStrokeColor: \"blue\",\n      symbolType: \"\"\n    },\n    link: {\n      highlightColor: \"lightblue\"\n    }\n    });\n\n    const handleConfig = (color, shape) => {\n      setMyConfig({\n        ...myConfig.nodeHighlightBehavior,\n        ...myConfig.height,\n        ...myConfig.width,\n        node: {\n          color: color,\n          ...myConfig.size,\n          ...myConfig.highlightStrokeColor,\n          symbolType: shape\n        },\n        link: {\n          ...myConfig.highlightColor\n        }\n      })\n    }\n\n  return (\n    <div class=\"box\">\n      <Graph id=\"graph-id\" data={data} config={myConfig} />\n      <Input createNode={createNode} handleConfig={handleConfig}/>\n    </div>\n  );\n};\n\nexport default D3Node;\n"]},"metadata":{},"sourceType":"module"}