{"ast":null,"code":"import _objectSpread from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _createClass from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{drag as d3Drag}from\"d3-drag\";import{forceLink as d3ForceLink}from\"d3-force\";import{select as d3Select,selectAll as d3SelectAll,event as d3Event}from\"d3-selection\";import{zoom as d3Zoom}from\"d3-zoom\";import CONST from\"./graph.const\";import DEFAULT_CONFIG from\"./graph.config\";import ERRORS from\"../err\";import{getTargetLeafConnections,toggleLinksMatrixConnections,toggleLinksConnections}from\"./collapse.helper\";import{updateNodeHighlightedValue,checkForGraphConfigChanges,checkForGraphElementsChanges,getCenterAndZoomTransformation,initializeGraphState}from\"./graph.helper\";import{renderGraph}from\"./graph.renderer\";import{merge,throwErr}from\"../utils\";/**\n * Graph component is the main component for react-d3-graph components, its interface allows its user\n * to build the graph once the user provides the data, configuration (optional) and callback interactions (also optional).\n * The code for the [live example](https://danielcaldas.github.io/react-d3-graph/sandbox/index.html)\n * can be consulted [here](https://github.com/danielcaldas/react-d3-graph/blob/master/sandbox/Sandbox.jsx)\n * @example\n * import { Graph } from 'react-d3-graph';\n *\n * // graph payload (with minimalist structure)\n * const data = {\n *     nodes: [\n *       {id: 'Harry'},\n *       {id: 'Sally'},\n *       {id: 'Alice'}\n *     ],\n *     links: [\n *         {source: 'Harry', target: 'Sally'},\n *         {source: 'Harry', target: 'Alice'},\n *     ]\n * };\n *\n * // the graph configuration, you only need to pass down properties\n * // that you want to override, otherwise default ones will be used\n * const myConfig = {\n *     nodeHighlightBehavior: true,\n *     node: {\n *         color: 'lightgreen',\n *         size: 120,\n *         highlightStrokeColor: 'blue'\n *     },\n *     link: {\n *         highlightColor: 'lightblue'\n *     }\n * };\n *\n * // Callback to handle click on the graph.\n * // @param {Object} event click dom event\n * const onClickGraph = function(event) {\n *      window.alert('Clicked the graph background');\n * };\n *\n * const onClickNode = function(nodeId) {\n *      window.alert('Clicked node ${nodeId}');\n * };\n *\n * const onDoubleClickNode = function(nodeId) {\n *      window.alert('Double clicked node ${nodeId}');\n * };\n *\n * const onRightClickNode = function(event, nodeId) {\n *      window.alert('Right clicked node ${nodeId}');\n * };\n *\n * const onMouseOverNode = function(nodeId) {\n *      window.alert(`Mouse over node ${nodeId}`);\n * };\n *\n * const onMouseOutNode = function(nodeId) {\n *      window.alert(`Mouse out node ${nodeId}`);\n * };\n *\n * const onClickLink = function(source, target) {\n *      window.alert(`Clicked link between ${source} and ${target}`);\n * };\n *\n * const onRightClickLink = function(event, source, target) {\n *      window.alert('Right clicked link between ${source} and ${target}');\n * };\n *\n * const onMouseOverLink = function(source, target) {\n *      window.alert(`Mouse over in link between ${source} and ${target}`);\n * };\n *\n * const onMouseOutLink = function(source, target) {\n *      window.alert(`Mouse out link between ${source} and ${target}`);\n * };\n *\n * const onNodePositionChange = function(nodeId, x, y) {\n *      window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n * };\n *\n *\n * <Graph\n *      id='graph-id' // id is mandatory, if no id is defined rd3g will throw an error\n *      data={data}\n *      config={myConfig}\n *      onClickGraph={onClickGraph}\n *      onClickNode={onClickNode}\n *      onDoubleClickNode={onDoubleClickNode}\n *      onRightClickNode={onRightClickNode}\n *      onClickLink={onClickLink}\n *      onRightClickLink={onRightClickLink}\n *      onMouseOverNode={onMouseOverNode}\n *      onMouseOutNode={onMouseOutNode}\n *      onMouseOverLink={onMouseOverLink}\n *      onMouseOutLink={onMouseOutLink}/>\n */var Graph=/*#__PURE__*/function(_React$Component){_inherits(Graph,_React$Component);_createClass(Graph,[{key:\"_graphLinkForceConfig\",/**\n   * Obtain a set of properties which will be used to perform the focus and zoom animation if\n   * required. In case there's not a focus and zoom animation in progress, it should reset the\n   * transition duration to zero and clear transformation styles.\n   * @returns {Object} - Focus and zoom animation properties.\n   */ /**\n   * This method runs {@link d3-force|https://github.com/d3/d3-force}\n   * against the current graph.\n   * @returns {undefined}\n   */value:function _graphLinkForceConfig(){var forceLink=d3ForceLink(this.state.d3Links).id(function(l){return l.id;}).distance(this.state.config.d3.linkLength).strength(this.state.config.d3.linkStrength);this.state.simulation.force(CONST.LINK_CLASS_NAME,forceLink);}/**\n   * This method runs {@link d3-drag|https://github.com/d3/d3-drag}\n   * against the current graph.\n   * @returns {undefined}\n   */},{key:\"_graphNodeDragConfig\",value:function _graphNodeDragConfig(){var customNodeDrag=d3Drag().on(\"start\",this._onDragStart).on(\"drag\",this._onDragMove).on(\"end\",this._onDragEnd);d3Select(\"#\".concat(this.state.id,\"-\").concat(CONST.GRAPH_WRAPPER_ID)).selectAll(\".node\").call(customNodeDrag);}/**\n   * Sets d3 tick function and configures other d3 stuff such as forces and drag events.\n   * Whenever called binds Graph component state with d3.\n   * @returns {undefined}\n   */},{key:\"_graphBindD3ToReactComponent\",value:function _graphBindD3ToReactComponent(){if(!this.state.config.d3.disableLinkForce){this.state.simulation.nodes(this.state.d3Nodes).on(\"tick\",this._tick);this._graphLinkForceConfig();}this._graphNodeDragConfig();}/**\n   * Handles d3 drag 'end' event.\n   * @returns {undefined}\n   */}]);function Graph(props){var _this;_classCallCheck(this,Graph);_this=_possibleConstructorReturn(this,_getPrototypeOf(Graph).call(this,props));_this._generateFocusAnimationProps=function(){var focusedNodeId=_this.state.focusedNodeId;// In case an older animation was still not complete, clear previous timeout to ensure the new one is not cancelled\nif(_this.state.enableFocusAnimation){if(_this.focusAnimationTimeout){clearTimeout(_this.focusAnimationTimeout);}_this.focusAnimationTimeout=setTimeout(function(){return _this.setState({enableFocusAnimation:false});},_this.state.config.focusAnimationDuration*1000);}var transitionDuration=_this.state.enableFocusAnimation?_this.state.config.focusAnimationDuration:0;return{style:{transitionDuration:\"\".concat(transitionDuration,\"s\")},transform:focusedNodeId?_this.state.focusTransformation:null};};_this._onDragEnd=function(){_this.isDraggingNode=false;if(_this.state.draggedNode){_this.onNodePositionChange(_this.state.draggedNode);_this._tick({draggedNode:null});}!_this.state.config.staticGraph&&_this.state.config.automaticRearrangeAfterDropNode&&_this.state.simulation.alphaTarget(_this.state.config.d3.alphaTarget).restart();};_this._onDragMove=function(ev,index,nodeList){var id=nodeList[index].id;if(!_this.state.config.staticGraph){// this is where d3 and react bind\nvar draggedNode=_this.state.nodes[id];draggedNode.oldX=draggedNode.x;draggedNode.oldY=draggedNode.y;draggedNode.x+=d3Event.dx;draggedNode.y+=d3Event.dy;// set nodes fixing coords fx and fy\ndraggedNode[\"fx\"]=draggedNode.x;draggedNode[\"fy\"]=draggedNode.y;_this._tick({draggedNode:draggedNode});}};_this._onDragStart=function(){_this.isDraggingNode=true;_this.pauseSimulation();if(_this.state.enableFocusAnimation){_this.setState({enableFocusAnimation:false});}};_this._setNodeHighlightedValue=function(id){var value=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return _this._tick(updateNodeHighlightedValue(_this.state.nodes,_this.state.links,_this.state.config,id,value));};_this._tick=function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var cb=arguments.length>1?arguments[1]:undefined;cb?_this.setState(state,cb):_this.setState(state);};_this._zoomConfig=function(){d3Select(\"#\".concat(_this.state.id,\"-\").concat(CONST.GRAPH_WRAPPER_ID)).call(d3Zoom().scaleExtent([_this.state.config.minZoom,_this.state.config.maxZoom]).on(\"zoom\",_this._zoomed)).on(\"dblclick.zoom\",null);};_this._zoomed=function(){var transform=d3Event.transform;d3SelectAll(\"#\".concat(_this.state.id,\"-\").concat(CONST.GRAPH_CONTAINER_ID)).attr(\"transform\",transform);_this.state.config.panAndZoom&&_this.setState({transform:transform.k});};_this.onClickGraph=function(e){var _e$target,_e$target$attributes,_e$target$attributes$;if(_this.state.enableFocusAnimation){_this.setState({enableFocusAnimation:false});}// Only trigger the graph onClickHandler, if not clicked a node or link.\n// toUpperCase() is added as a precaution, as the documentation says tagName should always\n// return in UPPERCASE, but chrome returns lowercase\nvar tagName=e.target&&e.target.tagName;var name=e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:(_e$target$attributes=_e$target.attributes)===null||_e$target$attributes===void 0?void 0:(_e$target$attributes$=_e$target$attributes.name)===null||_e$target$attributes$===void 0?void 0:_e$target$attributes$.value;var svgContainerName=\"svg-container-\".concat(_this.state.id);if(tagName.toUpperCase()===\"SVG\"&&name===svgContainerName){_this.props.onClickGraph&&_this.props.onClickGraph(e);}};_this.onClickNode=function(clickedNodeId){if(_this.state.config.collapsible){var leafConnections=getTargetLeafConnections(clickedNodeId,_this.state.links,_this.state.config);var links=toggleLinksMatrixConnections(_this.state.links,leafConnections,_this.state.config);var d3Links=toggleLinksConnections(_this.state.d3Links,links);var firstLeaf=leafConnections===null||leafConnections===void 0?void 0:leafConnections[\"0\"];var isExpanding=false;if(firstLeaf){var visibility=links[firstLeaf.source][firstLeaf.target];isExpanding=visibility===1;}_this._tick({links:links,d3Links:d3Links},function(){_this.props.onClickNode&&_this.props.onClickNode(clickedNodeId);if(isExpanding){_this._graphNodeDragConfig();}});}else{if(!_this.nodeClickTimer){_this.nodeClickTimer=setTimeout(function(){_this.props.onClickNode&&_this.props.onClickNode(clickedNodeId);_this.nodeClickTimer=null;},CONST.TTL_DOUBLE_CLICK_IN_MS);}else{_this.props.onDoubleClickNode&&_this.props.onDoubleClickNode(clickedNodeId);_this.nodeClickTimer=clearTimeout(_this.nodeClickTimer);}}};_this.onMouseOverNode=function(id){if(_this.isDraggingNode){return;}_this.props.onMouseOverNode&&_this.props.onMouseOverNode(id);_this.state.config.nodeHighlightBehavior&&_this._setNodeHighlightedValue(id,true);};_this.onMouseOutNode=function(id){if(_this.isDraggingNode){return;}_this.props.onMouseOutNode&&_this.props.onMouseOutNode(id);_this.state.config.nodeHighlightBehavior&&_this._setNodeHighlightedValue(id,false);};_this.onMouseOverLink=function(source,target){_this.props.onMouseOverLink&&_this.props.onMouseOverLink(source,target);if(_this.state.config.linkHighlightBehavior){var highlightedLink={source:source,target:target};_this._tick({highlightedLink:highlightedLink});}};_this.onMouseOutLink=function(source,target){_this.props.onMouseOutLink&&_this.props.onMouseOutLink(source,target);if(_this.state.config.linkHighlightBehavior){var highlightedLink=undefined;_this._tick({highlightedLink:highlightedLink});}};_this.onNodePositionChange=function(node){if(!_this.props.onNodePositionChange){return;}var id=node.id,x=node.x,y=node.y;_this.props.onNodePositionChange(id,x,y);};_this.pauseSimulation=function(){return _this.state.simulation.stop();};_this.resetNodesPositions=function(){if(!_this.state.config.staticGraph){for(var nodeId in _this.state.nodes){var node=_this.state.nodes[nodeId];if(node.fx&&node.fy){Reflect.deleteProperty(node,\"fx\");Reflect.deleteProperty(node,\"fy\");}}_this.state.simulation.alphaTarget(_this.state.config.d3.alphaTarget).restart();_this._tick();}};_this.restartSimulation=function(){return!_this.state.config.staticGraph&&_this.state.simulation.restart();};if(!_this.props.id){throwErr(_this.constructor.name,ERRORS.GRAPH_NO_ID_PROP);}_this.focusAnimationTimeout=null;_this.nodeClickTimer=null;_this.isDraggingNode=false;_this.state=initializeGraphState(_this.props,_this.state);return _this;}/**\n   * @deprecated\n   * `componentWillReceiveProps` has a replacement method in react v16.3 onwards.\n   * that is getDerivedStateFromProps.\n   * But one needs to be aware that if an anti pattern of `componentWillReceiveProps` is\n   * in place for this implementation the migration might not be that easy.\n   * See {@link https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html}.\n   * @param {Object} nextProps - props.\n   * @returns {undefined}\n   */ // eslint-disable-next-line\n_createClass(Graph,[{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps){var _checkForGraphElement=checkForGraphElementsChanges(nextProps,this.state),graphElementsUpdated=_checkForGraphElement.graphElementsUpdated,newGraphElements=_checkForGraphElement.newGraphElements;var state=graphElementsUpdated?initializeGraphState(nextProps,this.state):this.state;var newConfig=nextProps.config||{};var _checkForGraphConfigC=checkForGraphConfigChanges(nextProps,this.state),configUpdated=_checkForGraphConfigC.configUpdated,d3ConfigUpdated=_checkForGraphConfigC.d3ConfigUpdated;var config=configUpdated?merge(DEFAULT_CONFIG,newConfig):this.state.config;// in order to properly update graph data we need to pause eventual d3 ongoing animations\nnewGraphElements&&this.pauseSimulation();var transform=newConfig.panAndZoom!==this.state.config.panAndZoom?1:this.state.transform;var focusedNodeId=nextProps.data.focusedNodeId;var d3FocusedNode=this.state.d3Nodes.find(function(node){return\"\".concat(node.id)===\"\".concat(focusedNodeId);});var focusTransformation=getCenterAndZoomTransformation(d3FocusedNode,this.state.config);var enableFocusAnimation=this.props.data.focusedNodeId!==nextProps.data.focusedNodeId;this.setState(_objectSpread({},state,{config:config,configUpdated:configUpdated,d3ConfigUpdated:d3ConfigUpdated,newGraphElements:newGraphElements,transform:transform,focusedNodeId:focusedNodeId,enableFocusAnimation:enableFocusAnimation,focusTransformation:focusTransformation}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){// if the property staticGraph was activated we want to stop possible ongoing simulation\nvar shouldPause=this.state.config.staticGraph||this.state.config.staticGraphWithDragAndDrop;if(shouldPause){this.pauseSimulation();}if(!this.state.config.staticGraph&&(this.state.newGraphElements||this.state.d3ConfigUpdated)){this._graphBindD3ToReactComponent();if(!this.state.config.staticGraphWithDragAndDrop){this.restartSimulation();}this.setState({newGraphElements:false,d3ConfigUpdated:false});}else if(this.state.configUpdated){this._graphNodeDragConfig();}if(this.state.configUpdated){this._zoomConfig();this.setState({configUpdated:false});}}},{key:\"componentDidMount\",value:function componentDidMount(){if(!this.state.config.staticGraph){this._graphBindD3ToReactComponent();}// graph zoom and drag&drop all network\nthis._zoomConfig();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.pauseSimulation();if(this.nodeClickTimer){clearTimeout(this.nodeClickTimer);this.nodeClickTimer=null;}if(this.focusAnimationTimeout){clearTimeout(this.focusAnimationTimeout);this.focusAnimationTimeout=null;}}},{key:\"render\",value:function render(){var _renderGraph=renderGraph(this.state.nodes,{onClickNode:this.onClickNode,onDoubleClickNode:this.onDoubleClickNode,onRightClickNode:this.props.onRightClickNode,onMouseOverNode:this.onMouseOverNode,onMouseOut:this.onMouseOutNode},this.state.d3Links,this.state.links,{onClickLink:this.props.onClickLink,onRightClickLink:this.props.onRightClickLink,onMouseOverLink:this.onMouseOverLink,onMouseOutLink:this.onMouseOutLink},this.state.config,this.state.highlightedNode,this.state.highlightedLink,this.state.transform),nodes=_renderGraph.nodes,links=_renderGraph.links,defs=_renderGraph.defs;var svgStyle={height:this.state.config.height,width:this.state.config.width};var containerProps=this._generateFocusAnimationProps();return React.createElement(\"div\",{id:\"\".concat(this.state.id,\"-\").concat(CONST.GRAPH_WRAPPER_ID)},React.createElement(\"svg\",{name:\"svg-container-\".concat(this.state.id),style:svgStyle,onClick:this.onClickGraph},defs,React.createElement(\"g\",Object.assign({id:\"\".concat(this.state.id,\"-\").concat(CONST.GRAPH_CONTAINER_ID)},containerProps),links,nodes)));}}]);return Graph;}(React.Component);export{Graph as default};","map":{"version":3,"sources":["/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/src/components/Visualizer/Graph/Graph/graph/Graph.jsx"],"names":["React","drag","d3Drag","forceLink","d3ForceLink","select","d3Select","selectAll","d3SelectAll","event","d3Event","zoom","d3Zoom","CONST","DEFAULT_CONFIG","ERRORS","getTargetLeafConnections","toggleLinksMatrixConnections","toggleLinksConnections","updateNodeHighlightedValue","checkForGraphConfigChanges","checkForGraphElementsChanges","getCenterAndZoomTransformation","initializeGraphState","renderGraph","merge","throwErr","Graph","state","d3Links","id","l","distance","config","d3","linkLength","strength","linkStrength","simulation","force","LINK_CLASS_NAME","customNodeDrag","on","_onDragStart","_onDragMove","_onDragEnd","GRAPH_WRAPPER_ID","call","disableLinkForce","nodes","d3Nodes","_tick","_graphLinkForceConfig","_graphNodeDragConfig","props","_generateFocusAnimationProps","focusedNodeId","enableFocusAnimation","focusAnimationTimeout","clearTimeout","setTimeout","setState","focusAnimationDuration","transitionDuration","style","transform","focusTransformation","isDraggingNode","draggedNode","onNodePositionChange","staticGraph","automaticRearrangeAfterDropNode","alphaTarget","restart","ev","index","nodeList","oldX","x","oldY","y","dx","dy","pauseSimulation","_setNodeHighlightedValue","value","links","cb","_zoomConfig","scaleExtent","minZoom","maxZoom","_zoomed","GRAPH_CONTAINER_ID","attr","panAndZoom","k","onClickGraph","e","tagName","target","name","attributes","svgContainerName","toUpperCase","onClickNode","clickedNodeId","collapsible","leafConnections","firstLeaf","isExpanding","visibility","source","nodeClickTimer","TTL_DOUBLE_CLICK_IN_MS","onDoubleClickNode","onMouseOverNode","nodeHighlightBehavior","onMouseOutNode","onMouseOverLink","linkHighlightBehavior","highlightedLink","onMouseOutLink","undefined","node","stop","resetNodesPositions","nodeId","fx","fy","Reflect","deleteProperty","restartSimulation","constructor","GRAPH_NO_ID_PROP","nextProps","graphElementsUpdated","newGraphElements","newConfig","configUpdated","d3ConfigUpdated","data","d3FocusedNode","find","shouldPause","staticGraphWithDragAndDrop","_graphBindD3ToReactComponent","onRightClickNode","onMouseOut","onClickLink","onRightClickLink","highlightedNode","defs","svgStyle","height","width","containerProps","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { drag as d3Drag } from \"d3-drag\";\nimport { forceLink as d3ForceLink } from \"d3-force\";\nimport {\n  select as d3Select,\n  selectAll as d3SelectAll,\n  event as d3Event,\n} from \"d3-selection\";\nimport { zoom as d3Zoom } from \"d3-zoom\";\n\nimport CONST from \"./graph.const\";\nimport DEFAULT_CONFIG from \"./graph.config\";\nimport ERRORS from \"../err\";\n\nimport {\n  getTargetLeafConnections,\n  toggleLinksMatrixConnections,\n  toggleLinksConnections,\n} from \"./collapse.helper\";\nimport {\n  updateNodeHighlightedValue,\n  checkForGraphConfigChanges,\n  checkForGraphElementsChanges,\n  getCenterAndZoomTransformation,\n  initializeGraphState,\n} from \"./graph.helper\";\nimport { renderGraph } from \"./graph.renderer\";\nimport { merge, throwErr } from \"../utils\";\n\n/**\n * Graph component is the main component for react-d3-graph components, its interface allows its user\n * to build the graph once the user provides the data, configuration (optional) and callback interactions (also optional).\n * The code for the [live example](https://danielcaldas.github.io/react-d3-graph/sandbox/index.html)\n * can be consulted [here](https://github.com/danielcaldas/react-d3-graph/blob/master/sandbox/Sandbox.jsx)\n * @example\n * import { Graph } from 'react-d3-graph';\n *\n * // graph payload (with minimalist structure)\n * const data = {\n *     nodes: [\n *       {id: 'Harry'},\n *       {id: 'Sally'},\n *       {id: 'Alice'}\n *     ],\n *     links: [\n *         {source: 'Harry', target: 'Sally'},\n *         {source: 'Harry', target: 'Alice'},\n *     ]\n * };\n *\n * // the graph configuration, you only need to pass down properties\n * // that you want to override, otherwise default ones will be used\n * const myConfig = {\n *     nodeHighlightBehavior: true,\n *     node: {\n *         color: 'lightgreen',\n *         size: 120,\n *         highlightStrokeColor: 'blue'\n *     },\n *     link: {\n *         highlightColor: 'lightblue'\n *     }\n * };\n *\n * // Callback to handle click on the graph.\n * // @param {Object} event click dom event\n * const onClickGraph = function(event) {\n *      window.alert('Clicked the graph background');\n * };\n *\n * const onClickNode = function(nodeId) {\n *      window.alert('Clicked node ${nodeId}');\n * };\n *\n * const onDoubleClickNode = function(nodeId) {\n *      window.alert('Double clicked node ${nodeId}');\n * };\n *\n * const onRightClickNode = function(event, nodeId) {\n *      window.alert('Right clicked node ${nodeId}');\n * };\n *\n * const onMouseOverNode = function(nodeId) {\n *      window.alert(`Mouse over node ${nodeId}`);\n * };\n *\n * const onMouseOutNode = function(nodeId) {\n *      window.alert(`Mouse out node ${nodeId}`);\n * };\n *\n * const onClickLink = function(source, target) {\n *      window.alert(`Clicked link between ${source} and ${target}`);\n * };\n *\n * const onRightClickLink = function(event, source, target) {\n *      window.alert('Right clicked link between ${source} and ${target}');\n * };\n *\n * const onMouseOverLink = function(source, target) {\n *      window.alert(`Mouse over in link between ${source} and ${target}`);\n * };\n *\n * const onMouseOutLink = function(source, target) {\n *      window.alert(`Mouse out link between ${source} and ${target}`);\n * };\n *\n * const onNodePositionChange = function(nodeId, x, y) {\n *      window.alert(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n * };\n *\n *\n * <Graph\n *      id='graph-id' // id is mandatory, if no id is defined rd3g will throw an error\n *      data={data}\n *      config={myConfig}\n *      onClickGraph={onClickGraph}\n *      onClickNode={onClickNode}\n *      onDoubleClickNode={onDoubleClickNode}\n *      onRightClickNode={onRightClickNode}\n *      onClickLink={onClickLink}\n *      onRightClickLink={onRightClickLink}\n *      onMouseOverNode={onMouseOverNode}\n *      onMouseOutNode={onMouseOutNode}\n *      onMouseOverLink={onMouseOverLink}\n *      onMouseOutLink={onMouseOutLink}/>\n */\nexport default class Graph extends React.Component {\n  /**\n   * Obtain a set of properties which will be used to perform the focus and zoom animation if\n   * required. In case there's not a focus and zoom animation in progress, it should reset the\n   * transition duration to zero and clear transformation styles.\n   * @returns {Object} - Focus and zoom animation properties.\n   */\n  _generateFocusAnimationProps = () => {\n    const { focusedNodeId } = this.state;\n\n    // In case an older animation was still not complete, clear previous timeout to ensure the new one is not cancelled\n    if (this.state.enableFocusAnimation) {\n      if (this.focusAnimationTimeout) {\n        clearTimeout(this.focusAnimationTimeout);\n      }\n\n      this.focusAnimationTimeout = setTimeout(\n        () => this.setState({ enableFocusAnimation: false }),\n        this.state.config.focusAnimationDuration * 1000\n      );\n    }\n\n    const transitionDuration = this.state.enableFocusAnimation\n      ? this.state.config.focusAnimationDuration\n      : 0;\n\n    return {\n      style: { transitionDuration: `${transitionDuration}s` },\n      transform: focusedNodeId ? this.state.focusTransformation : null,\n    };\n  };\n\n  /**\n   * This method runs {@link d3-force|https://github.com/d3/d3-force}\n   * against the current graph.\n   * @returns {undefined}\n   */\n  _graphLinkForceConfig() {\n    const forceLink = d3ForceLink(this.state.d3Links)\n      .id((l) => l.id)\n      .distance(this.state.config.d3.linkLength)\n      .strength(this.state.config.d3.linkStrength);\n\n    this.state.simulation.force(CONST.LINK_CLASS_NAME, forceLink);\n  }\n\n  /**\n   * This method runs {@link d3-drag|https://github.com/d3/d3-drag}\n   * against the current graph.\n   * @returns {undefined}\n   */\n  _graphNodeDragConfig() {\n    const customNodeDrag = d3Drag()\n      .on(\"start\", this._onDragStart)\n      .on(\"drag\", this._onDragMove)\n      .on(\"end\", this._onDragEnd);\n\n    d3Select(`#${this.state.id}-${CONST.GRAPH_WRAPPER_ID}`)\n      .selectAll(\".node\")\n      .call(customNodeDrag);\n  }\n\n  /**\n   * Sets d3 tick function and configures other d3 stuff such as forces and drag events.\n   * Whenever called binds Graph component state with d3.\n   * @returns {undefined}\n   */\n  _graphBindD3ToReactComponent() {\n    if (!this.state.config.d3.disableLinkForce) {\n      this.state.simulation.nodes(this.state.d3Nodes).on(\"tick\", this._tick);\n      this._graphLinkForceConfig();\n    }\n    this._graphNodeDragConfig();\n  }\n\n  /**\n   * Handles d3 drag 'end' event.\n   * @returns {undefined}\n   */\n  _onDragEnd = () => {\n    this.isDraggingNode = false;\n\n    if (this.state.draggedNode) {\n      this.onNodePositionChange(this.state.draggedNode);\n      this._tick({ draggedNode: null });\n    }\n\n    !this.state.config.staticGraph &&\n      this.state.config.automaticRearrangeAfterDropNode &&\n      this.state.simulation\n        .alphaTarget(this.state.config.d3.alphaTarget)\n        .restart();\n  };\n\n  /**\n   * Handles d3 'drag' event.\n   * {@link https://github.com/d3/d3-drag/blob/master/README.md#drag_subject|more about d3 drag}\n   * @param  {Object} ev - if not undefined it will contain event data.\n   * @param  {number} index - index of the node that is being dragged.\n   * @param  {Array.<Object>} nodeList - array of d3 nodes. This list of nodes is provided by d3, each\n   * node contains all information that was previously fed by rd3g.\n   * @returns {undefined}\n   */\n  _onDragMove = (ev, index, nodeList) => {\n    const id = nodeList[index].id;\n\n    if (!this.state.config.staticGraph) {\n      // this is where d3 and react bind\n      let draggedNode = this.state.nodes[id];\n\n      draggedNode.oldX = draggedNode.x;\n      draggedNode.oldY = draggedNode.y;\n\n      draggedNode.x += d3Event.dx;\n      draggedNode.y += d3Event.dy;\n\n      // set nodes fixing coords fx and fy\n      draggedNode[\"fx\"] = draggedNode.x;\n      draggedNode[\"fy\"] = draggedNode.y;\n\n      this._tick({ draggedNode });\n    }\n  };\n\n  /**\n   * Handles d3 drag 'start' event.\n   * @returns {undefined}\n   */\n  _onDragStart = () => {\n    this.isDraggingNode = true;\n    this.pauseSimulation();\n\n    if (this.state.enableFocusAnimation) {\n      this.setState({ enableFocusAnimation: false });\n    }\n  };\n\n  /**\n   * Sets nodes and links highlighted value.\n   * @param  {string} id - the id of the node to highlight.\n   * @param  {boolean} [value=false] - the highlight value to be set (true or false).\n   * @returns {undefined}\n   */\n  _setNodeHighlightedValue = (id, value = false) =>\n    this._tick(\n      updateNodeHighlightedValue(\n        this.state.nodes,\n        this.state.links,\n        this.state.config,\n        id,\n        value\n      )\n    );\n\n  /**\n   * The tick function simply calls React set state in order to update component and render nodes\n   * along time as d3 calculates new node positioning.\n   * @param {Object} state - new state to pass on.\n   * @param {Function} [cb] - optional callback to fed in to {@link setState()|https://reactjs.org/docs/react-component.html#setstate}.\n   * @returns {undefined}\n   */\n  _tick = (state = {}, cb) => {\n    cb ? this.setState(state, cb) : this.setState(state);\n  };\n\n  /**\n   * Configures zoom upon graph with default or user provided values.<br/>\n   * NOTE: in order for users to be able to double click on nodes, we\n   * are disabling the native dblclick.zoom from d3 that performs a zoom\n   * whenever a user double clicks on top of the graph.\n   * {@link https://github.com/d3/d3-zoom#zoom}\n   * @returns {undefined}\n   */\n  _zoomConfig = () => {\n    d3Select(`#${this.state.id}-${CONST.GRAPH_WRAPPER_ID}`)\n      .call(\n        d3Zoom()\n          .scaleExtent([this.state.config.minZoom, this.state.config.maxZoom])\n          .on(\"zoom\", this._zoomed)\n      )\n      .on(\"dblclick.zoom\", null);\n  };\n\n  /**\n   * Handler for 'zoom' event within zoom config.\n   * @returns {Object} returns the transformed elements within the svg graph area.\n   */\n  _zoomed = () => {\n    const transform = d3Event.transform;\n\n    d3SelectAll(`#${this.state.id}-${CONST.GRAPH_CONTAINER_ID}`).attr(\n      \"transform\",\n      transform\n    );\n\n    this.state.config.panAndZoom && this.setState({ transform: transform.k });\n  };\n\n  /**\n   * Calls the callback passed to the component.\n   * @param  {Object} e - The event of onClick handler.\n   * @returns {undefined}\n   */\n  onClickGraph = (e) => {\n    if (this.state.enableFocusAnimation) {\n      this.setState({ enableFocusAnimation: false });\n    }\n\n    // Only trigger the graph onClickHandler, if not clicked a node or link.\n    // toUpperCase() is added as a precaution, as the documentation says tagName should always\n    // return in UPPERCASE, but chrome returns lowercase\n    const tagName = e.target && e.target.tagName;\n    const name = e?.target?.attributes?.name?.value;\n    const svgContainerName = `svg-container-${this.state.id}`;\n\n    if (tagName.toUpperCase() === \"SVG\" && name === svgContainerName) {\n      this.props.onClickGraph && this.props.onClickGraph(e);\n    }\n  };\n\n  /**\n   * Collapses the nodes, then checks if the click is doubled and calls the callback passed to the component.\n   * @param  {string} clickedNodeId - The id of the node where the click was performed.\n   * @returns {undefined}\n   */\n  onClickNode = (clickedNodeId) => {\n    if (this.state.config.collapsible) {\n      const leafConnections = getTargetLeafConnections(\n        clickedNodeId,\n        this.state.links,\n        this.state.config\n      );\n      const links = toggleLinksMatrixConnections(\n        this.state.links,\n        leafConnections,\n        this.state.config\n      );\n      const d3Links = toggleLinksConnections(this.state.d3Links, links);\n      const firstLeaf = leafConnections?.[\"0\"];\n\n      let isExpanding = false;\n\n      if (firstLeaf) {\n        const visibility = links[firstLeaf.source][firstLeaf.target];\n\n        isExpanding = visibility === 1;\n      }\n\n      this._tick(\n        {\n          links,\n          d3Links,\n        },\n        () => {\n          this.props.onClickNode && this.props.onClickNode(clickedNodeId);\n\n          if (isExpanding) {\n            this._graphNodeDragConfig();\n          }\n        }\n      );\n    } else {\n      if (!this.nodeClickTimer) {\n        this.nodeClickTimer = setTimeout(() => {\n          this.props.onClickNode && this.props.onClickNode(clickedNodeId);\n          this.nodeClickTimer = null;\n        }, CONST.TTL_DOUBLE_CLICK_IN_MS);\n      } else {\n        this.props.onDoubleClickNode &&\n          this.props.onDoubleClickNode(clickedNodeId);\n        this.nodeClickTimer = clearTimeout(this.nodeClickTimer);\n      }\n    }\n  };\n\n  /**\n   * Handles mouse over node event.\n   * @param  {string} id - id of the node that participates in the event.\n   * @returns {undefined}\n   */\n  onMouseOverNode = (id) => {\n    if (this.isDraggingNode) {\n      return;\n    }\n\n    this.props.onMouseOverNode && this.props.onMouseOverNode(id);\n\n    this.state.config.nodeHighlightBehavior &&\n      this._setNodeHighlightedValue(id, true);\n  };\n\n  /**\n   * Handles mouse out node event.\n   * @param  {string} id - id of the node that participates in the event.\n   * @returns {undefined}\n   */\n  onMouseOutNode = (id) => {\n    if (this.isDraggingNode) {\n      return;\n    }\n\n    this.props.onMouseOutNode && this.props.onMouseOutNode(id);\n\n    this.state.config.nodeHighlightBehavior &&\n      this._setNodeHighlightedValue(id, false);\n  };\n\n  /**\n   * Handles mouse over link event.\n   * @param  {string} source - id of the source node that participates in the event.\n   * @param  {string} target - id of the target node that participates in the event.\n   * @returns {undefined}\n   */\n  onMouseOverLink = (source, target) => {\n    this.props.onMouseOverLink && this.props.onMouseOverLink(source, target);\n\n    if (this.state.config.linkHighlightBehavior) {\n      const highlightedLink = { source, target };\n\n      this._tick({ highlightedLink });\n    }\n  };\n\n  /**\n   * Handles mouse out link event.\n   * @param  {string} source - id of the source node that participates in the event.\n   * @param  {string} target - id of the target node that participates in the event.\n   * @returns {undefined}\n   */\n  onMouseOutLink = (source, target) => {\n    this.props.onMouseOutLink && this.props.onMouseOutLink(source, target);\n\n    if (this.state.config.linkHighlightBehavior) {\n      const highlightedLink = undefined;\n\n      this._tick({ highlightedLink });\n    }\n  };\n\n  /**\n   * Handles node position change.\n   * @param {Object} node - an object holding information about the dragged node.\n   * @returns {undefined}\n   */\n  onNodePositionChange = (node) => {\n    if (!this.props.onNodePositionChange) {\n      return;\n    }\n\n    const { id, x, y } = node;\n\n    this.props.onNodePositionChange(id, x, y);\n  };\n\n  /**\n   * Calls d3 simulation.stop().<br/>\n   * {@link https://github.com/d3/d3-force#simulation_stop}\n   * @returns {undefined}\n   */\n  pauseSimulation = () => this.state.simulation.stop();\n\n  /**\n   * This method resets all nodes fixed positions by deleting the properties fx (fixed x)\n   * and fy (fixed y). Following this, a simulation is triggered in order to force nodes to go back\n   * to their original positions (or at least new positions according to the d3 force parameters).\n   * @returns {undefined}\n   */\n  resetNodesPositions = () => {\n    if (!this.state.config.staticGraph) {\n      for (let nodeId in this.state.nodes) {\n        let node = this.state.nodes[nodeId];\n\n        if (node.fx && node.fy) {\n          Reflect.deleteProperty(node, \"fx\");\n          Reflect.deleteProperty(node, \"fy\");\n        }\n      }\n\n      this.state.simulation\n        .alphaTarget(this.state.config.d3.alphaTarget)\n        .restart();\n\n      this._tick();\n    }\n  };\n\n  /**\n   * Calls d3 simulation.restart().<br/>\n   * {@link https://github.com/d3/d3-force#simulation_restart}\n   * @returns {undefined}\n   */\n  restartSimulation = () =>\n    !this.state.config.staticGraph && this.state.simulation.restart();\n\n  constructor(props) {\n    super(props);\n\n    if (!this.props.id) {\n      throwErr(this.constructor.name, ERRORS.GRAPH_NO_ID_PROP);\n    }\n\n    this.focusAnimationTimeout = null;\n    this.nodeClickTimer = null;\n    this.isDraggingNode = false;\n    this.state = initializeGraphState(this.props, this.state);\n  }\n\n  /**\n   * @deprecated\n   * `componentWillReceiveProps` has a replacement method in react v16.3 onwards.\n   * that is getDerivedStateFromProps.\n   * But one needs to be aware that if an anti pattern of `componentWillReceiveProps` is\n   * in place for this implementation the migration might not be that easy.\n   * See {@link https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html}.\n   * @param {Object} nextProps - props.\n   * @returns {undefined}\n   */\n  // eslint-disable-next-line\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {\n      graphElementsUpdated,\n      newGraphElements,\n    } = checkForGraphElementsChanges(nextProps, this.state);\n    const state = graphElementsUpdated\n      ? initializeGraphState(nextProps, this.state)\n      : this.state;\n    const newConfig = nextProps.config || {};\n    const { configUpdated, d3ConfigUpdated } = checkForGraphConfigChanges(\n      nextProps,\n      this.state\n    );\n    const config = configUpdated\n      ? merge(DEFAULT_CONFIG, newConfig)\n      : this.state.config;\n\n    // in order to properly update graph data we need to pause eventual d3 ongoing animations\n    newGraphElements && this.pauseSimulation();\n\n    const transform =\n      newConfig.panAndZoom !== this.state.config.panAndZoom\n        ? 1\n        : this.state.transform;\n    const focusedNodeId = nextProps.data.focusedNodeId;\n    const d3FocusedNode = this.state.d3Nodes.find(\n      (node) => `${node.id}` === `${focusedNodeId}`\n    );\n    const focusTransformation = getCenterAndZoomTransformation(\n      d3FocusedNode,\n      this.state.config\n    );\n    const enableFocusAnimation =\n      this.props.data.focusedNodeId !== nextProps.data.focusedNodeId;\n\n    this.setState({\n      ...state,\n      config,\n      configUpdated,\n      d3ConfigUpdated,\n      newGraphElements,\n      transform,\n      focusedNodeId,\n      enableFocusAnimation,\n      focusTransformation,\n    });\n  }\n\n  componentDidUpdate() {\n    // if the property staticGraph was activated we want to stop possible ongoing simulation\n    const shouldPause =\n      this.state.config.staticGraph ||\n      this.state.config.staticGraphWithDragAndDrop;\n\n    if (shouldPause) {\n      this.pauseSimulation();\n    }\n\n    if (\n      !this.state.config.staticGraph &&\n      (this.state.newGraphElements || this.state.d3ConfigUpdated)\n    ) {\n      this._graphBindD3ToReactComponent();\n\n      if (!this.state.config.staticGraphWithDragAndDrop) {\n        this.restartSimulation();\n      }\n\n      this.setState({ newGraphElements: false, d3ConfigUpdated: false });\n    } else if (this.state.configUpdated) {\n      this._graphNodeDragConfig();\n    }\n\n    if (this.state.configUpdated) {\n      this._zoomConfig();\n      this.setState({ configUpdated: false });\n    }\n  }\n\n  componentDidMount() {\n    if (!this.state.config.staticGraph) {\n      this._graphBindD3ToReactComponent();\n    }\n\n    // graph zoom and drag&drop all network\n    this._zoomConfig();\n  }\n\n  componentWillUnmount() {\n    this.pauseSimulation();\n\n    if (this.nodeClickTimer) {\n      clearTimeout(this.nodeClickTimer);\n      this.nodeClickTimer = null;\n    }\n\n    if (this.focusAnimationTimeout) {\n      clearTimeout(this.focusAnimationTimeout);\n      this.focusAnimationTimeout = null;\n    }\n  }\n\n  render() {\n    const { nodes, links, defs } = renderGraph(\n      this.state.nodes,\n      {\n        onClickNode: this.onClickNode,\n        onDoubleClickNode: this.onDoubleClickNode,\n        onRightClickNode: this.props.onRightClickNode,\n        onMouseOverNode: this.onMouseOverNode,\n        onMouseOut: this.onMouseOutNode,\n      },\n      this.state.d3Links,\n      this.state.links,\n      {\n        onClickLink: this.props.onClickLink,\n        onRightClickLink: this.props.onRightClickLink,\n        onMouseOverLink: this.onMouseOverLink,\n        onMouseOutLink: this.onMouseOutLink,\n      },\n      this.state.config,\n      this.state.highlightedNode,\n      this.state.highlightedLink,\n      this.state.transform\n    );\n\n    const svgStyle = {\n      height: this.state.config.height,\n      width: this.state.config.width,\n    };\n\n    const containerProps = this._generateFocusAnimationProps();\n\n    return (\n      <div id={`${this.state.id}-${CONST.GRAPH_WRAPPER_ID}`}>\n        <svg\n          name={`svg-container-${this.state.id}`}\n          style={svgStyle}\n          onClick={this.onClickGraph}\n        >\n          {defs}\n          <g\n            id={`${this.state.id}-${CONST.GRAPH_CONTAINER_ID}`}\n            {...containerProps}\n          >\n            {links}\n            {nodes}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}