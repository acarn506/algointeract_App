{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/LeftWindow/LeftWindow.jsx\";\nimport React, { useState } from 'react';\nimport D3Node from '../d3Node/D3Node';\nimport './LeftWindow.css';\n\nconst LeftWindow = props => {\n  //set state of Configurations \n  const [myConfig, setMyConfig] = useState(props.config); // Change state of Configurations \n\n  const handleConfig = color => {\n    {\n      console.log(color);\n    }\n    setMyConfig({\n      nodeHighlightBehavior: true,\n      height: window.innerHeight * 0.811,\n      width: window.innerWidth,\n      node: {\n        color: color,\n        size: 500,\n        highlightStrokeColor: \"blue\"\n      },\n      link: {\n        highlightColor: \"lightblue\"\n      }\n    });\n  }; //const [color, setColor] = useState('')\n\n  /*\n  const inputHandler = (event) => {\n      //prevent the forn submission from refreshing the page\n      event.preventDefault() \n      console.log(color)\n      handleConfig(color)\n       //reset inputs\n      //setName('')\n  } */\n\n\n  return React.createElement(\"div\", {\n    class: \"leftWindow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    class: \"font-weight-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Node Color \"), React.createElement(\"div\", {\n    class: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"color\",\n    id: \"color\",\n    type: \"text\",\n    name: \"nodeColor\",\n    placeholder: 'text',\n    value: myConfig.node.color.target,\n    onChange: e => document.getElementById('color').value //onKeyPress={this._handleLinkKeyEnter}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    class: \"submit\",\n    type: \"submit\",\n    value: \"Start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nexport default LeftWindow;\n/*Name and Target with hooks\n\nconst Input = ({createNode, handleConfig}) => {\n const [name, setName] = useState('')\n const [color, setColor] = useState('')\n const [target, setTarget] = useState('')\n const inputHandler = (event) => {\n        //prevent the forn submission from refreshing the page\n        event.preventDefault() \n        console.log(target)\n        createNode(name, target)\n        handleConfig(color)\n\n        //reset inputs\n        setName('')\n    }\n\n\n    return(\n        <div className='form grid'>\n            <form onSubmit={inputHandler}>\n                \n                <label class='nameL' htmlFor='name'>Name</label>\n                <input\n                    class='name'\n                    type='text'\n                    label=\"Name\"\n                    value={name}\n                    placeholder='Enter a Name'\n                    required onChange={(e) => setName(e.target.value)}\n                />\n             \n                <select class='color' id='color' onChange={ (e) => setColor(document.getElementById('color').value)}>\n                    <option value='default'>Color</option>\n                    <option value='lightgreen'>lightgreen</option>\n                    <option value='blue'>blue</option>\n                    <option value='red'>red</option>\n                    <option value='orange'>orange</option>\n                    <option value='purple'>purple</option>\n                    <option value='yellow'>yellow</option>\n                </select>\n\n\n                <select class='connect' id='connect' onChange={ (e) => setTarget(document.getElementById('connect').value)}>\n                    <option value='default'>Target</option>\n                    <option value='Harry'>Harry</option>\n                    <option value='Sally'>Sally</option>\n                    <option value='Alice'>Alice</option>\n                </select>\n\n            <input class='submit' type='submit' value='Create Node'/>\n            </form>\n        </div>\n    )\n}\n\n\n    <h5 class=\"font-weight-light pt-3\"> Node Size </h5>\n            <div class=\"input-group mb-3\">\n                <input\n                class=\"linkInput\"\n                type=\"text\"\n                name=\"addLink\"\n                placeholder={}\n                value={}\n                onChange={}\n                onKeyPress={}\n                />\n            </div>\n*/","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/LeftWindow/LeftWindow.jsx"],"names":["React","useState","D3Node","LeftWindow","props","myConfig","setMyConfig","config","handleConfig","color","console","log","nodeHighlightBehavior","height","window","innerHeight","width","innerWidth","node","size","highlightStrokeColor","link","highlightColor","target","e","document","getElementById","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACG,KAAK,CAACG,MAAP,CAAxC,CAH0B,CAKnB;;AACP,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAChC;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB;AAClBH,IAAAA,WAAW,CAAC;AACVM,MAAAA,qBAAqB,EAAE,IADb;AAEVC,MAAAA,MAAM,EAAEC,MAAM,CAACC,WAAP,GAAqB,KAFnB;AAGVC,MAAAA,KAAK,EAAEF,MAAM,CAACG,UAHJ;AAIVC,MAAAA,IAAI,EAAE;AACJT,QAAAA,KAAK,EAAEA,KADH;AAEJU,QAAAA,IAAI,EAAE,GAFF;AAGJC,QAAAA,oBAAoB,EAAE;AAHlB,OAJI;AASVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,cAAc,EAAE;AADZ;AATI,KAAD,CAAX;AAaD,GAfD,CAN0B,CAuB1B;;AACA;;;;;;;;;;;AAYA,SACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEd,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAI,IAAA,KAAK,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,KAAK,EAAC,OADN;AAEA,IAAA,EAAE,EAAC,OAFH;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,IAAI,EAAC,WAJL;AAKA,IAAA,WAAW,EAAE,MALb;AAMA,IAAA,KAAK,EAAEH,QAAQ,CAACa,IAAT,CAAcT,KAAd,CAAoBc,MAN3B;AAOA,IAAA,QAAQ,EAAGC,CAAD,IAAOC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAPlD,CAQA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHA,EAiBA;AAAO,IAAA,KAAK,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC,QAA3B;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,CADJ,CADJ;AAuBH,CA3DD;;AA6DA,eAAexB,UAAf;AAMA","sourcesContent":["import React, {useState} from 'react'\nimport D3Node from '../d3Node/D3Node'\nimport './LeftWindow.css'\n\nconst LeftWindow = (props) => {\n\n    //set state of Configurations \n    const [myConfig, setMyConfig] = useState(props.config);\n\n           // Change state of Configurations \n    const handleConfig = (color) => {\n    {console.log(color)}\n      setMyConfig({\n        nodeHighlightBehavior: true,\n        height: window.innerHeight * 0.811,\n        width: window.innerWidth,\n        node: {\n          color: color,\n          size: 500,\n          highlightStrokeColor: \"blue\",\n        },\n        link: {\n          highlightColor: \"lightblue\"\n        }\n      })\n    }\n\n    //const [color, setColor] = useState('')\n    /*\n    const inputHandler = (event) => {\n        //prevent the forn submission from refreshing the page\n        event.preventDefault() \n        console.log(color)\n        handleConfig(color)\n\n        //reset inputs\n        //setName('')\n    } */\n\n\n    return(\n        <div class=\"leftWindow\">\n            <form onSubmit={handleConfig}>\n            \n            <h5 class=\"font-weight-light\"> Node Color </h5>\n            <div class=\"input-group mb-3\">\n                <input\n                class=\"color\"\n                id='color'\n                type=\"text\"\n                name=\"nodeColor\"\n                placeholder={'text'}\n                value={myConfig.node.color.target}\n                onChange={(e) => document.getElementById('color').value}\n                //onKeyPress={this._handleLinkKeyEnter}\n                />\n            </div>\n\n\n            <input class='submit' type='submit' value='Start'/>\n        </form>\n        </div>\n    )\n}\n\nexport default LeftWindow\n\n\n\n\n\n/*Name and Target with hooks\n\nconst Input = ({createNode, handleConfig}) => {\n const [name, setName] = useState('')\n const [color, setColor] = useState('')\n const [target, setTarget] = useState('')\n const inputHandler = (event) => {\n        //prevent the forn submission from refreshing the page\n        event.preventDefault() \n        console.log(target)\n        createNode(name, target)\n        handleConfig(color)\n\n        //reset inputs\n        setName('')\n    }\n\n\n    return(\n        <div className='form grid'>\n            <form onSubmit={inputHandler}>\n                \n                <label class='nameL' htmlFor='name'>Name</label>\n                <input\n                    class='name'\n                    type='text'\n                    label=\"Name\"\n                    value={name}\n                    placeholder='Enter a Name'\n                    required onChange={(e) => setName(e.target.value)}\n                />\n             \n                <select class='color' id='color' onChange={ (e) => setColor(document.getElementById('color').value)}>\n                    <option value='default'>Color</option>\n                    <option value='lightgreen'>lightgreen</option>\n                    <option value='blue'>blue</option>\n                    <option value='red'>red</option>\n                    <option value='orange'>orange</option>\n                    <option value='purple'>purple</option>\n                    <option value='yellow'>yellow</option>\n                </select>\n\n\n                <select class='connect' id='connect' onChange={ (e) => setTarget(document.getElementById('connect').value)}>\n                    <option value='default'>Target</option>\n                    <option value='Harry'>Harry</option>\n                    <option value='Sally'>Sally</option>\n                    <option value='Alice'>Alice</option>\n                </select>\n\n            <input class='submit' type='submit' value='Create Node'/>\n            </form>\n        </div>\n    )\n}\n\n\n    <h5 class=\"font-weight-light pt-3\"> Node Size </h5>\n            <div class=\"input-group mb-3\">\n                <input\n                class=\"linkInput\"\n                type=\"text\"\n                name=\"addLink\"\n                placeholder={}\n                value={}\n                onChange={}\n                onKeyPress={}\n                />\n            </div>\n*/"]},"metadata":{},"sourceType":"module"}