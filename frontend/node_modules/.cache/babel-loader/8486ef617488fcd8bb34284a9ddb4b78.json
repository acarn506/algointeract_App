{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Visualizer/Graph/GraphVisualizer.jsx\";\nimport React from \"../../../../node_modules/react\";\nimport { Graph } from \"../../Node\";\nimport TreeView from \"../../../../node_modules/react-treeview\";\nimport \"./GraphVisualizer.css\";\nimport LeftWindow from \"../../LeftWindow/LeftWindow\";\nimport { Dropdown, Form, Button } from \"react-bootstrap\"; // Graph Visualizer component to be called in visualizer page.\n\nexport default class GraphVisualizer extends React.Component {\n  // constructor of the GraphVisualizer class. Contains the states:\n  // config: the configuration used for the Graph component\n  // generatedConfig:\n  // data: the data used for the Graph component\n  // nodeIdToBeRemoved: id of the node to be removed which is used in the onClickRemoveNode function\n  // addNodeName: a string used by the onClickAddNode function to set the new node name\n  // removeNodeName: a string used by the onClickRemoveNode function to delete the desired node\n  // addNodePlaceholder: a string used by the addNode input box\n  // removeNodePlaceholder: a string used by the removeNode input box\n  constructor(props) {\n    super(props); // Default data used by the Graph component\n\n    this.onClickAddNode = () => {\n      if (this.state.addNodeName === \"\") {\n        this.setState({\n          addNodePlaceholder: \"Please enter a value!\"\n        });\n        return;\n      }\n\n      if (this.state.data.nodes && this.state.data.nodes.length) {\n        const newNode = `${this.state.addNodeName}`;\n        this.state.data.nodes.push({\n          id: newNode\n        });\n        this.setState({\n          data: this.state.data\n        });\n      } else {\n        // 1st node\n        const data = {\n          nodes: [{\n            id: \"Node 1\"\n          }],\n          links: []\n        };\n        this.setState({\n          data\n        });\n      }\n\n      this.setState({\n        addNodeName: \"\",\n        addNodePlaceholder: \"Enter node to add\"\n      });\n    };\n\n    this.onClickRemoveNode = () => {\n      if (this.state.removeNodeName === \"\") {\n        this.setState({\n          removeNodePlaceholder: \"Please enter a value!\"\n        });\n        return;\n      }\n\n      if (this.state.data.nodes && this.state.data.nodes.length >= 1) {\n        const nodes = this.state.data.nodes.filter(l => l.id !== this.state.removeNodeName);\n        const links = this.state.data.links.filter(l => l.source !== this.state.removeNodeName && l.target !== this.state.removeNodeName);\n        const data = {\n          nodes,\n          links\n        };\n        this.setState({\n          data,\n          removeNodeName: \"\",\n          removeNodePlaceholder: \"Enter node to remove\"\n        });\n      }\n    };\n\n    this.onClickAddLink = () => {\n      if (this.state.addLink === \"\") {\n        return;\n      }\n\n      if (this.state.data.nodes && this.state.data.nodes.length) {\n        let source, target;\n        [source, target] = this.state.addLink.split(/[ ,]+/).filter(function (e) {\n          return e.trim().length > 0;\n        });\n        var sourceExists, targetExists;\n        sourceExists = targetExists = false;\n\n        for (var i = 0; i < this.state.data.nodes.length; i++) {\n          if (this.state.data.nodes[i].id === source) {\n            sourceExists = true;\n          }\n\n          if (this.state.data.nodes[i].id === target) {\n            targetExists = true;\n          }\n        }\n\n        if (!sourceExists || !targetExists) {\n          console.log(\"NODE DOES NOT EXIST!\");\n          this.setState({\n            addLink: \"\",\n            addLinkPlaceholder: \"Enter as: source, target\"\n          });\n          return;\n        }\n\n        for (var j = 0; j < this.state.data.links.length; j++) {\n          if (this.state.data.links[j].source === source && this.state.data.links[j].target === target) {\n            console.log(\"ALREADY EXISTS!\");\n            this.setState({\n              addLink: \"\",\n              addLinkPlaceholder: \"Enter as: source, target\"\n            });\n            return;\n          }\n        }\n\n        this.state.data.links.push({\n          source: source,\n          target: target\n        });\n\n        if (source in this.state.neighbors) {\n          this.state.neighbors[source].push(target);\n        } else {\n          this.state.neighbors[source] = [];\n          this.state.neighbors[source].push(target);\n        }\n\n        this.setState({\n          addLink: \"\",\n          addLinkPlaceholder: \"Enter as: source, target\"\n        });\n      }\n    };\n\n    this.onClickRemoveLink = () => {\n      if (this.state.removeLink === \"\") {\n        return;\n      }\n\n      if (this.state.data.nodes && this.state.data.nodes.length) {\n        let source, target;\n        [source, target] = this.state.removeLink.split(/[ ,]+/).filter(function (e) {\n          return e.trim().length > 0;\n        });\n        var sourceExists, targetExists;\n        sourceExists = targetExists = false;\n\n        for (var i = 0; i < this.state.data.nodes.length; i++) {\n          if (this.state.data.nodes[i].id === source) {\n            sourceExists = true;\n          }\n\n          if (this.state.data.nodes[i].id === target) {\n            targetExists = true;\n          }\n        }\n\n        if (!sourceExists || !targetExists) {\n          console.log(\"NODE DOES NOT EXIST!\");\n          this.setState({\n            removeLink: \"\",\n            removeLinkPlaceholder: \"Enter as: source, target\"\n          });\n          return;\n        }\n\n        console.log(source, target);\n        const links = this.state.data.links.filter(l => l.source !== source && l.target !== target);\n        const data = {\n          nodes: this.state.data.nodes,\n          links\n        };\n\n        if (source in this.state.neighbors) {\n          this.state.neighbors[source] = this.state.neighbors[source].filter(l => l !== target);\n        }\n\n        this.setState({\n          data: data,\n          removeLink: \"\",\n          removeLinkPlaceholder: \"Enter as: source, target\"\n        });\n      }\n    };\n\n    this._addNodeHandleChange = event => {\n      this.setState({\n        addNodeName: event.target.value\n      });\n    };\n\n    this._removeNodeHandleChange = event => {\n      this.setState({\n        removeNodeName: event.target.value\n      });\n    };\n\n    this._addLinkHandleChange = event => {\n      this.setState({\n        addLink: event.target.value\n      });\n    };\n\n    this._removeLinkHandleChange = event => {\n      this.setState({\n        removeLink: event.target.value\n      });\n    };\n\n    this._handleAddKeyEnter = e => {\n      if (e.key === \"Enter\") {\n        this.onClickAddNode();\n      }\n    };\n\n    this._handleRemoveKeyEnter = e => {\n      if (e.key === \"Enter\") {\n        this.onClickRemoveNode();\n      }\n    };\n\n    this._handleLinkKeyEnter = e => {\n      if (e.key === \"Enter\") {\n        this.onClickAddLink();\n      }\n    };\n\n    this._handleRemoveLinkKeyEnter = e => {\n      if (e.key === \"Enter\") {\n        this.onClickRemoveLink();\n      }\n    };\n\n    this._onRightClickNode = () => {\n      console.log(\"RIGHT CLICK\");\n    };\n\n    this.nSizeHandler = nSize => {\n      const config = this.state.config;\n      config.node.size = nSize;\n      this.setState({\n        config: config\n      });\n    };\n\n    this.nColorHandler = nColor => {\n      const config = this.state.config;\n      config.node.color = nColor;\n      this.setState({\n        config: config\n      });\n    };\n\n    this.lColorHandler = lColor => {\n      const config = this.state.config;\n      config.link.color = lColor;\n      this.setState({\n        config: config\n      });\n    };\n\n    const _data = {\n      nodes: [{\n        id: \"Harry\"\n      }, {\n        id: \"Sally\"\n      }, {\n        id: \"Alice\"\n      }],\n      links: [{\n        source: \"Harry\",\n        target: \"Sally\"\n      }, {\n        source: \"Harry\",\n        target: \"Alice\"\n      }],\n      weight: 2\n    };\n    const neighbors = {\n      Harry: [\"Sally\", \"Alice\"],\n      Sally: [],\n      Alice: []\n    }; // Default configurations used by the Graph component\n\n    const _config = {\n      nodeHighlightBehavior: true,\n      automaticRearrangeAfterDropNode: true,\n      height: window.innerHeight * 0.811,\n      width: window.innerWidth,\n      node: {\n        color: \"#c34f6b\",\n        size: 500,\n        highlightStrokeColor: \"blue\"\n      },\n      link: {\n        highlightColor: \"lightblue\"\n      }\n    }; // Class states\n\n    this.state = {\n      config: _config,\n      generatedConfig: {},\n      data: _data,\n      neighbors: neighbors,\n      nodeIdToBeRemoved: null,\n      addNodeName: \"\",\n      removeNodeName: \"\",\n      addLink: \"\",\n      addNodePlaceholder: \"Enter node to add\",\n      removeNodePlaceholder: \"Enter node to remove\",\n      addLinkPlaceholder: \"Enter as: source, target\",\n      removeLinkPlaceholder: \"Enter as: source, target\"\n    };\n  } // Function called by the addButton. Makes sure the addNodeName state is not an\n  // empty string. Then checks that the data.nodes array in the state is NOT empty and\n  // that the length is greater than 0. Then it creates a new node with the value of the\n  // addNoneName and links it to a target node if given. Then it updates the state of\n  // data array of the class and resets the addNodeName and addNodePlaceholder.\n\n\n  // Main function of the React component. Returns what is displayed to the user. This includes\n  // the left window, right window, and the main graph visualizer component.\n  render() {\n    return (// Main display which contains the leftWindow, rightWindow, and the Graph Visualizer\n      React.createElement(\"div\", {\n        class: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"leftWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        id: \"graphConfig\",\n        className: \"LeftWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Graph Configurations\"), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(LeftWindow, {\n        nSize: this.nSizeHandler,\n        nColor: this.nColorHandler,\n        lColor: this.lColorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }))), React.createElement(Dropdown, {\n        id: \"algo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Algorithm Settings\"), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        type: \"checkbox\",\n        id: \"direct\",\n        label: \"Directed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), React.createElement(Form.Check, {\n        type: \"checkbox\",\n        id: \"weight\",\n        label: \"Weighted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      })), React.createElement(Dropdown, {\n        id: \"algoSelection\",\n        class: \"dropdown\",\n        drop: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"outline-info\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Algorithm\"), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Depth-First Search\"), React.createElement(Dropdown.Item, {\n        evenyKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Breadth-First Search\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Dijkstra's\"))), React.createElement(\"h5\", {\n        class: \"font-weight-light h6 pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \" Start Node \"), React.createElement(\"div\", {\n        class: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        class: \"L\",\n        id: \"sNode\",\n        type: \"text\",\n        name: \"startNode\",\n        placeholder: \"Enter starting node\",\n        onChange: \"\" //onKeyPress={this._handleLinkKeyEnter}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      })), React.createElement(\"h5\", {\n        class: \"font-weight-light h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \" Target Node \"), React.createElement(\"div\", {\n        class: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        class: \"L\",\n        id: \"tNode\",\n        type: \"text\",\n        name: \"tarhetNode\",\n        placeholder: \"Enter ending node\",\n        onChange: \"\" //onKeyPress={this._handleLinkKeyEnter}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      })), React.createElement(Button, {\n        class: \"submit mt-3\",\n        type: \"submit\",\n        variant: \"outline-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Start\"))))), React.createElement(\"div\", {\n        class: \"rightWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"font-weight-light pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \" Add node: \"), React.createElement(\"div\", {\n        class: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClickAddNode,\n        type: \"button\",\n        class: \"btn btn-outline-danger\",\n        id: \"button-addon1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        class: \"align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, \" + \"))), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"nodeInput\",\n        name: \"addNodeName\",\n        placeholder: this.state.addNodePlaceholder,\n        value: this.state.addNodeName,\n        onChange: this._addNodeHandleChange,\n        onKeyPress: this._handleAddKeyEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      })), React.createElement(\"h5\", {\n        class: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \" Remove node: \"), React.createElement(\"div\", {\n        class: \"input-group mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClickRemoveNode,\n        type: \"button\",\n        class: \"btn btn-outline-danger pl-3 pr-2.5\",\n        id: \"button-addon1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        class: \"align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \" - \"))), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"nodeInput\",\n        name: \"removeNodeName\",\n        placeholder: this.state.removeNodePlaceholder,\n        value: this.state.removeNodeName,\n        onChange: this._removeNodeHandleChange,\n        onKeyPress: this._handleRemoveKeyEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })), React.createElement(\"h5\", {\n        class: \"font-weight-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \" Add link: \"), React.createElement(\"input\", {\n        class: \"linkInput\",\n        type: \"text\",\n        name: \"addLink\",\n        placeholder: this.state.addLinkPlaceholder,\n        value: this.state.addLink,\n        onChange: this._addLinkHandleChange,\n        onKeyPress: this._handleLinkKeyEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        class: \"font-weight-light pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \" Remove link: \"), React.createElement(\"input\", {\n        class: \"linkInput\",\n        type: \"text\",\n        name: \"removeLink\",\n        placeholder: this.state.removeLinkPlaceholder,\n        value: this.state.removeLink,\n        onChange: this._removeLinkHandleChange,\n        onKeyPress: this._handleRemoveLinkKeyEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        class: \"font-weight-light pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \" Node list: \"), React.createElement(\"div\", {\n        className: \"json-data-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(TreeView, {\n        class: \"nodes\",\n        key: \"nodes\",\n        nodeLabel: \"Nodes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, this.state.data.nodes.map((node, i) => {\n        const type = node.type;\n        const name = node.id;\n\n        if (name in this.state.neighbors) {\n          return React.createElement(TreeView, {\n            key: type + \"|\" + i,\n            nodeLabel: name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 504\n            },\n            __self: this\n          }, React.createElement(TreeView, {\n            key: type + \"|\" + i,\n            nodeLabel: \"neighbors: \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 505\n            },\n            __self: this\n          }, this.state.neighbors[name].map((neighbor, i) => {\n            return React.createElement(\"div\", {\n              className: \"info\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 507\n              },\n              __self: this\n            }, \" \", neighbor);\n          })));\n        }\n      })))), React.createElement(Graph, {\n        id: \"graph-id\",\n        data: this.state.data,\n        config: this.state.config,\n        onRightClickNode: this._onRightClickNode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Visualizer/Graph/GraphVisualizer.jsx"],"names":["React","Graph","TreeView","LeftWindow","Dropdown","Form","Button","GraphVisualizer","Component","constructor","props","onClickAddNode","state","addNodeName","setState","addNodePlaceholder","data","nodes","length","newNode","push","id","links","onClickRemoveNode","removeNodeName","removeNodePlaceholder","filter","l","source","target","onClickAddLink","addLink","split","e","trim","sourceExists","targetExists","i","console","log","addLinkPlaceholder","j","neighbors","onClickRemoveLink","removeLink","removeLinkPlaceholder","_addNodeHandleChange","event","value","_removeNodeHandleChange","_addLinkHandleChange","_removeLinkHandleChange","_handleAddKeyEnter","key","_handleRemoveKeyEnter","_handleLinkKeyEnter","_handleRemoveLinkKeyEnter","_onRightClickNode","nSizeHandler","nSize","config","node","size","nColorHandler","nColor","color","lColorHandler","lColor","link","weight","Harry","Sally","Alice","nodeHighlightBehavior","automaticRearrangeAfterDropNode","height","window","innerHeight","width","innerWidth","highlightStrokeColor","highlightColor","generatedConfig","nodeIdToBeRemoved","render","map","type","name","neighbor"],"mappings":"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","sourcesContent":["import React from \"../../../../node_modules/react\";\nimport { Graph } from \"../../Node\";\nimport TreeView from \"../../../../node_modules/react-treeview\";\nimport \"./GraphVisualizer.css\";\nimport LeftWindow from \"../../LeftWindow/LeftWindow\";\nimport { Dropdown, Form, Button} from \"react-bootstrap\";\n\n// Graph Visualizer component to be called in visualizer page.\nexport default class GraphVisualizer extends React.Component {\n  // constructor of the GraphVisualizer class. Contains the states:\n  // config: the configuration used for the Graph component\n  // generatedConfig:\n  // data: the data used for the Graph component\n  // nodeIdToBeRemoved: id of the node to be removed which is used in the onClickRemoveNode function\n  // addNodeName: a string used by the onClickAddNode function to set the new node name\n  // removeNodeName: a string used by the onClickRemoveNode function to delete the desired node\n  // addNodePlaceholder: a string used by the addNode input box\n  // removeNodePlaceholder: a string used by the removeNode input box\n  constructor(props) {\n    super(props);\n\n    // Default data used by the Graph component\n    const data = {\n      nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n      links: [\n        { source: \"Harry\", target: \"Sally\" },\n        { source: \"Harry\", target: \"Alice\" }\n      ],\n      weight: 2\n    };\n\n    const neighbors = {\n      Harry: [\"Sally\", \"Alice\"],\n      Sally: [],\n      Alice: []\n    };\n\n    // Default configurations used by the Graph component\n    const config = {\n      nodeHighlightBehavior: true,\n      automaticRearrangeAfterDropNode: true,\n      height: window.innerHeight * 0.811,\n      width: window.innerWidth,\n      node: {\n        color: \"#c34f6b\",\n        size: 500,\n        highlightStrokeColor: \"blue\"\n      },\n      link: {\n        highlightColor: \"lightblue\"\n      }\n    };\n\n    // Class states\n    this.state = {\n      config,\n      generatedConfig: {},\n      data,\n      neighbors: neighbors,\n      nodeIdToBeRemoved: null,\n      addNodeName: \"\",\n      removeNodeName: \"\",\n      addLink: \"\",\n      addNodePlaceholder: \"Enter node to add\",\n      removeNodePlaceholder: \"Enter node to remove\",\n      addLinkPlaceholder: \"Enter as: source, target\",\n      removeLinkPlaceholder: \"Enter as: source, target\"\n    };\n  }\n\n  // Function called by the addButton. Makes sure the addNodeName state is not an\n  // empty string. Then checks that the data.nodes array in the state is NOT empty and\n  // that the length is greater than 0. Then it creates a new node with the value of the\n  // addNoneName and links it to a target node if given. Then it updates the state of\n  // data array of the class and resets the addNodeName and addNodePlaceholder.\n  onClickAddNode = () => {\n    if (this.state.addNodeName === \"\") {\n      this.setState({\n        addNodePlaceholder: \"Please enter a value!\"\n      });\n      return;\n    }\n    if (this.state.data.nodes && this.state.data.nodes.length) {\n      const newNode = `${this.state.addNodeName}`;\n\n      this.state.data.nodes.push({ id: newNode });\n\n      this.setState({\n        data: this.state.data\n      });\n    } else {\n      // 1st node\n      const data = {\n        nodes: [{ id: \"Node 1\" }],\n        links: []\n      };\n\n      this.setState({ data });\n    }\n\n    this.setState({\n      addNodeName: \"\",\n      addNodePlaceholder: \"Enter node to add\"\n    });\n  };\n\n  // Function called by the removeNode button. Makes sure the removeNodeName is not an empty string.\n  // Then, makes sure the data.nodes array in the class state is NOT empty and the data.nodes.length\n  // is greater than 0. Then filters the original nodes and links arrays in the data array using the\n  // removeNodeName of the class state. THen update the class data state along with resetting\n  // removeNodeName and removeNodePlaceholder.\n  onClickRemoveNode = () => {\n    if (this.state.removeNodeName === \"\") {\n      this.setState({\n        removeNodePlaceholder: \"Please enter a value!\"\n      });\n      return;\n    }\n    if (this.state.data.nodes && this.state.data.nodes.length >= 1) {\n      const nodes = this.state.data.nodes.filter(\n        l => l.id !== this.state.removeNodeName\n      );\n      const links = this.state.data.links.filter(\n        l =>\n          l.source !== this.state.removeNodeName &&\n          l.target !== this.state.removeNodeName\n      );\n      const data = { nodes, links };\n\n      this.setState({\n        data,\n        removeNodeName: \"\",\n        removeNodePlaceholder: \"Enter node to remove\"\n      });\n    }\n  };\n\n  onClickAddLink = () => {\n    if (this.state.addLink === \"\") {\n      return;\n    }\n    if (this.state.data.nodes && this.state.data.nodes.length) {\n      let source, target;\n      [source, target] = this.state.addLink.split(/[ ,]+/).filter(function(e) {\n        return e.trim().length > 0;\n      });\n\n      var sourceExists, targetExists;\n      sourceExists = targetExists = false;\n\n      for (var i = 0; i < this.state.data.nodes.length; i++) {\n        if (this.state.data.nodes[i].id === source) {\n          sourceExists = true;\n        }\n        if (this.state.data.nodes[i].id === target) {\n          targetExists = true;\n        }\n      }\n\n      if (!sourceExists || !targetExists) {\n        console.log(\"NODE DOES NOT EXIST!\");\n        this.setState({\n          addLink: \"\",\n          addLinkPlaceholder: \"Enter as: source, target\"\n        });\n        return;\n      }\n\n      for (var j = 0; j < this.state.data.links.length; j++) {\n        if (\n          this.state.data.links[j].source === source &&\n          this.state.data.links[j].target === target\n        ) {\n          console.log(\"ALREADY EXISTS!\");\n          this.setState({\n            addLink: \"\",\n            addLinkPlaceholder: \"Enter as: source, target\"\n          });\n          return;\n        }\n      }\n\n      this.state.data.links.push({\n        source: source,\n        target: target\n      });\n\n      if (source in this.state.neighbors) {\n        this.state.neighbors[source].push(target);\n      } else {\n        this.state.neighbors[source] = [];\n        this.state.neighbors[source].push(target);\n      }\n\n      this.setState({\n        addLink: \"\",\n        addLinkPlaceholder: \"Enter as: source, target\"\n      });\n    }\n  };\n\n  onClickRemoveLink = () => {\n    if (this.state.removeLink === \"\") {\n      return;\n    }\n    if (this.state.data.nodes && this.state.data.nodes.length) {\n      let source, target;\n      [source, target] = this.state.removeLink\n        .split(/[ ,]+/)\n        .filter(function(e) {\n          return e.trim().length > 0;\n        });\n\n      var sourceExists, targetExists;\n      sourceExists = targetExists = false;\n\n      for (var i = 0; i < this.state.data.nodes.length; i++) {\n        if (this.state.data.nodes[i].id === source) {\n          sourceExists = true;\n        }\n        if (this.state.data.nodes[i].id === target) {\n          targetExists = true;\n        }\n      }\n\n      if (!sourceExists || !targetExists) {\n        console.log(\"NODE DOES NOT EXIST!\");\n        this.setState({\n          removeLink: \"\",\n          removeLinkPlaceholder: \"Enter as: source, target\"\n        });\n        return;\n      }\n\n      console.log(source, target);\n\n      const links = this.state.data.links.filter(\n        l => l.source !== source && l.target !== target\n      );\n\n      const data = { nodes: this.state.data.nodes, links };\n\n      if (source in this.state.neighbors) {\n        this.state.neighbors[source] = this.state.neighbors[source].filter(\n          l => l !== target\n        );\n      }\n\n      this.setState({\n        data: data,\n        removeLink: \"\",\n        removeLinkPlaceholder: \"Enter as: source, target\"\n      });\n    }\n  };\n\n  // Handler function that is used by the addNode input box, keeps track of the changes\n  // and then updates the addNodeName of the state accordingly.\n  _addNodeHandleChange = event => {\n    this.setState({ addNodeName: event.target.value });\n  };\n\n  // Handler function that is used by the removeNode input box, keeps track of the changes\n  // and then updates the removeNodeName of the state accordingly.\n  _removeNodeHandleChange = event => {\n    this.setState({ removeNodeName: event.target.value });\n  };\n\n  _addLinkHandleChange = event => {\n    this.setState({ addLink: event.target.value });\n  };\n\n  _removeLinkHandleChange = event => {\n    this.setState({ removeLink: event.target.value });\n  };\n\n  // Handler function that listens to the Remove key press\n  // and calls the onClickAddNode function.\n  _handleAddKeyEnter = e => {\n    if (e.key === \"Enter\") {\n      this.onClickAddNode();\n    }\n  };\n\n  // Handler function that listens to the Enter key press\n  // and calls the onClickRemoveNode function.\n  _handleRemoveKeyEnter = e => {\n    if (e.key === \"Enter\") {\n      this.onClickRemoveNode();\n    }\n  };\n\n  _handleLinkKeyEnter = e => {\n    if (e.key === \"Enter\") {\n      this.onClickAddLink();\n    }\n  };\n\n  _handleRemoveLinkKeyEnter = e => {\n    if (e.key === \"Enter\") {\n      this.onClickRemoveLink();\n    }\n  };\n\n  _onRightClickNode = () => {\n    console.log(\"RIGHT CLICK\");\n  };\n\n    //Functions for state handling \n    nSizeHandler = (nSize) => {\n      const config = this.state.config\n  \n      config.node.size = nSize\n  \n      this.setState({\n        config : config\n      })\n    }\n  \n    nColorHandler = (nColor) => {\n      const config = this.state.config\n  \n      config.node.color = nColor\n  \n      this.setState({\n        config : config\n      })\n    }\n  \n    lColorHandler = (lColor) => {\n      const config = this.state.config\n  \n      config.link.color = lColor\n  \n      this.setState({\n        config : config\n      })\n    }\n\n  // Main function of the React component. Returns what is displayed to the user. This includes\n  // the left window, right window, and the main graph visualizer component.\n  render() {\n    return (\n      // Main display which contains the leftWindow, rightWindow, and the Graph Visualizer\n      <div class=\"box\">\n        <div class=\"leftWindow\">\n\n          <Dropdown id='graphConfig' className='LeftWindow'>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              Graph Configurations\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n            <LeftWindow \n              nSize={this.nSizeHandler}\n              nColor={this.nColorHandler}\n              lColor={this.lColorHandler}\n            />\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Dropdown id='algo'>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              Algorithm Settings\n            </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n          <form onSubmit=''>\n            <div className=\"mt-1\">\n              <Form.Check type=\"checkbox\" id=\"direct\" label=\"Directed\" />\n              <Form.Check type=\"checkbox\" id=\"weight\" label=\"Weighted\" />\n            </div>\n\n\n            <Dropdown id='algoSelection' class=\"dropdown\" drop=\"right\">\n              <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-basic\">\n                Algorithm\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item eventKey=\"1\" active>\n                  Depth-First Search\n                </Dropdown.Item>\n                <Dropdown.Item evenyKey=\"2\">Breadth-First Search</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Dijkstra's</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <h5 class=\"font-weight-light h6 pt-3\"> Start Node </h5>\n            <div class=\"input-group mb-3\">\n              <input\n                class=\"L\"\n                id=\"sNode\"\n                type=\"text\"\n                name=\"startNode\"\n                placeholder=\"Enter starting node\"\n                onChange=''\n                //onKeyPress={this._handleLinkKeyEnter}\n              />\n            </div>\n\n            <h5 class=\"font-weight-light h6\"> Target Node </h5>\n            <div class=\"input-group mb-3\">\n              <input\n                class=\"L\"\n                id=\"tNode\"\n                type=\"text\"\n                name=\"tarhetNode\"\n                placeholder=\"Enter ending node\"\n                onChange=''\n                //onKeyPress={this._handleLinkKeyEnter}\n              />\n            </div>\n\n            <Button class=\"submit mt-3\" type=\"submit\" variant=\"outline-success\">\n              Start\n            </Button>\n          </form>\n\n          </Dropdown.Menu>\n\n         </Dropdown>\n          \n\n        </div>\n\n        <div class=\"rightWindow\">\n          <h5 class=\"font-weight-light pt-2\"> Add node: </h5>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <button\n                onClick={this.onClickAddNode}\n                type=\"button\"\n                class=\"btn btn-outline-danger\"\n                id=\"button-addon1\"\n              >\n                <h6 class=\"align-middle\"> + </h6>\n              </button>\n            </div>\n            <input\n              type=\"text\"\n              class=\"nodeInput\"\n              name=\"addNodeName\"\n              placeholder={this.state.addNodePlaceholder}\n              value={this.state.addNodeName}\n              onChange={this._addNodeHandleChange}\n              onKeyPress={this._handleAddKeyEnter}\n            />\n          </div>\n\n          <h5 class=\"font-weight-light\"> Remove node: </h5>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <button\n                onClick={this.onClickRemoveNode}\n                type=\"button\"\n                class=\"btn btn-outline-danger pl-3 pr-2.5\"\n                id=\"button-addon1\"\n              >\n                <h6 class=\"align-middle\"> - </h6>\n              </button>\n            </div>\n            <input\n              type=\"text\"\n              class=\"nodeInput\"\n              name=\"removeNodeName\"\n              placeholder={this.state.removeNodePlaceholder}\n              value={this.state.removeNodeName}\n              onChange={this._removeNodeHandleChange}\n              onKeyPress={this._handleRemoveKeyEnter}\n            />\n          </div>\n\n          <h5 class=\"font-weight-light\"> Add link: </h5>\n          <input\n            class=\"linkInput\"\n            type=\"text\"\n            name=\"addLink\"\n            placeholder={this.state.addLinkPlaceholder}\n            value={this.state.addLink}\n            onChange={this._addLinkHandleChange}\n            onKeyPress={this._handleLinkKeyEnter}\n          />\n\n          <h5 class=\"font-weight-light pt-3\"> Remove link: </h5>\n          <input\n            class=\"linkInput\"\n            type=\"text\"\n            name=\"removeLink\"\n            placeholder={this.state.removeLinkPlaceholder}\n            value={this.state.removeLink}\n            onChange={this._removeLinkHandleChange}\n            onKeyPress={this._handleRemoveLinkKeyEnter}\n          />\n\n          <h5 class=\"font-weight-light pt-3\"> Node list: </h5>\n          <div className=\"json-data-container\">\n            <TreeView class=\"nodes\" key=\"nodes\" nodeLabel=\"Nodes\">\n              {this.state.data.nodes.map((node, i) => {\n                const type = node.type;\n                const name = node.id;\n                if (name in this.state.neighbors) {\n                  return (\n                    <TreeView key={type + \"|\" + i} nodeLabel={name}>\n                      <TreeView key={type + \"|\" + i} nodeLabel=\"neighbors: \">\n                        {this.state.neighbors[name].map((neighbor, i) => {\n                          return <div className=\"info\"> {neighbor}</div>;\n                        })}\n                      </TreeView>\n                    </TreeView>\n                  );\n                }\n              })}\n            </TreeView>\n          </div>\n        </div>\n\n        <Graph\n          id=\"graph-id\"\n          data={this.state.data}\n          config={this.state.config}\n          onRightClickNode={this._onRightClickNode}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}