{"ast":null,"code":"import _objectSpread from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/**\n * @module Graph/renderer\n * @description\n * Offers a series of methods that isolate render logic for Graph component.\n */import React from\"react\";import CONST from\"./graph.const\";import{MARKERS,MARKER_SMALL_SIZE,MARKER_MEDIUM_OFFSET,MARKER_LARGE_OFFSET}from\"../marker/marker.const\";import Link from\"../link/Link\";import Node from\"../node/Node\";import Marker from\"../marker/Marker\";import{buildLinkProps,buildNodeProps}from\"./graph.builder\";import{getId}from\"./graph.helper\";import{isNodeVisible}from\"./collapse.helper\";/**\n * Build Link components given a list of links.\n * @param  {Object.<string, Object>} nodes - same as {@link #graphrenderer|nodes in renderGraph}.\n * @param  {Array.<Object>} links - array of links {@link #Link|Link}.\n * @param  {Array.<Object>} linksMatrix - array of links {@link #Link|Link}.\n * @param  {Object} config - same as {@link #graphrenderer|config in renderGraph}.\n * @param  {Function[]} linkCallbacks - same as {@link #graphrenderer|linkCallbacks in renderGraph}.\n * @param  {string} highlightedNode - same as {@link #graphrenderer|highlightedNode in renderGraph}.\n * @param  {Object} highlightedLink - same as {@link #graphrenderer|highlightedLink in renderGraph}.\n * @param  {number} transform - value that indicates the amount of zoom transformation.\n * @returns {Array.<Object>} returns the generated array of Link components.\n * @memberof Graph/renderer\n */function _renderLinks(nodes,links,linksMatrix,config,linkCallbacks,highlightedNode,highlightedLink,transform){var outLinks=links;if(config.collapsible){outLinks=outLinks.filter(function(_ref){var isHidden=_ref.isHidden;return!isHidden;});}return outLinks.map(function(link){var source=link.source,target=link.target;var sourceId=getId(source);var targetId=getId(target);var key=\"\".concat(sourceId).concat(CONST.COORDS_SEPARATOR).concat(targetId);var props=buildLinkProps(_objectSpread(_objectSpread({},link),{},{source:\"\".concat(sourceId),target:\"\".concat(targetId)}),nodes,linksMatrix,config,linkCallbacks,\"\".concat(highlightedNode),highlightedLink,transform);return/*#__PURE__*/React.createElement(Link,Object.assign({key:key,id:key},props));});}/**\n * Function that builds Node components.\n * @param  {Object.<string, Object>} nodes - an object containing all nodes mapped by their id.\n * @param  {Function[]} nodeCallbacks - array of callbacks for used defined event handler for node interactions.\n * @param  {Object} config - an object containing rd3g consumer defined configurations {@link #config config} for the graph.\n * @param  {string} highlightedNode - this value contains a string that represents the some currently highlighted node.\n * @param  {Object} highlightedLink - this object contains a source and target property for a link that is highlighted at some point in time.\n * @param  {string} highlightedLink.source - id of source node for highlighted link.\n * @param  {string} highlightedLink.target - id of target node for highlighted link.\n * @param  {number} transform - value that indicates the amount of zoom transformation.\n * @param  {Object.<string, Object>} linksMatrix - the matrix of connections of the graph\n * @returns {Array.<Object>} returns the generated array of node components\n * @memberof Graph/renderer\n */function _renderNodes(nodes,nodeCallbacks,config,highlightedNode,highlightedLink,transform,linksMatrix){var outNodes=Object.keys(nodes);if(config.collapsible){outNodes=outNodes.filter(function(nodeId){return isNodeVisible(nodeId,nodes,linksMatrix);});}return outNodes.map(function(nodeId){var props=buildNodeProps(_objectSpread(_objectSpread({},nodes[nodeId]),{},{id:\"\".concat(nodeId)}),config,nodeCallbacks,highlightedNode,highlightedLink,transform);return/*#__PURE__*/React.createElement(Node,Object.assign({key:nodeId},props));});}/**\n * Builds graph defs (for now markers, but we could also have gradients for instance).\n * NOTE: defs are static svg graphical objects, thus we only need to render them once, the result\n * is cached on the 1st call and from there we simply return the cached jsx.\n * @returns {Function} memoized build definitions function.\n * @memberof Graph/renderer\n */function _renderDefs(){var cachedDefs;return function(config){if(cachedDefs){return cachedDefs;}var small=MARKER_SMALL_SIZE;var medium=small+MARKER_MEDIUM_OFFSET*config.maxZoom/3;var large=small+MARKER_LARGE_OFFSET*config.maxZoom/3;var markerProps={markerWidth:config.link.markerWidth,markerHeight:config.link.markerHeight};cachedDefs=/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(Marker,Object.assign({id:MARKERS.MARKER_S,refX:small,fill:config.link.color},markerProps)),/*#__PURE__*/React.createElement(Marker,Object.assign({id:MARKERS.MARKER_SH,refX:small,fill:config.link.highlightColor},markerProps)),/*#__PURE__*/React.createElement(Marker,Object.assign({id:MARKERS.MARKER_M,refX:medium,fill:config.link.color},markerProps)),/*#__PURE__*/React.createElement(Marker,Object.assign({id:MARKERS.MARKER_MH,refX:medium,fill:config.link.highlightColor},markerProps)),/*#__PURE__*/React.createElement(Marker,Object.assign({id:MARKERS.MARKER_L,refX:large,fill:config.link.color},markerProps)),/*#__PURE__*/React.createElement(Marker,Object.assign({id:MARKERS.MARKER_LH,refX:large,fill:config.link.highlightColor},markerProps)));return cachedDefs;};}/**\n * Memoized reference for _renderDefs.\n * @param  {Object} config - an object containing rd3g consumer defined configurations {@link #config config} for the graph.\n * @returns {Object} graph reusable objects [defs](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs).\n * @memberof Graph/renderer\n */var _memoizedRenderDefs=_renderDefs();/**\n * Method that actually is exported an consumed by Graph component in order to build all Nodes and Link\n * components.\n * @param  {Object.<string, Object>} nodes - an object containing all nodes mapped by their id.\n * @param  {Function[]} nodeCallbacks - array of callbacks for used defined event handler for node interactions.\n * @param  {Array.<Object>} links - array of links {@link #Link|Link}.\n * @param  {Object.<string, Object>} linksMatrix - an object containing a matrix of connections of the graph, for each nodeId,\n * there is an Object that maps adjacent nodes ids (string) and their values (number).\n * ```javascript\n *  // links example\n *  {\n *     \"Androsynth\": {\n *         \"Chenjesu\": 1,\n *         \"Ilwrath\": 1,\n *         \"Mycon\": 1,\n *         \"Spathi\": 1,\n *         \"Umgah\": 1,\n *         \"VUX\": 1,\n *         \"Guardian\": 1\n *     },\n *     \"Chenjesu\": {\n *         \"Androsynth\": 1,\n *         \"Mycon\": 1,\n *         \"Spathi\": 1,\n *         \"Umgah\": 1,\n *         \"VUX\": 1,\n *         \"Broodhmome\": 1\n *     },\n *     ...\n *  }\n * ```\n * @param  {Function[]} linkCallbacks - array of callbacks for used defined event handler for link interactions.\n * @param  {Object} config - an object containing rd3g consumer defined configurations {@link #config config} for the graph.\n * @param  {string} highlightedNode - this value contains a string that represents the some currently highlighted node.\n * @param  {Object} highlightedLink - this object contains a source and target property for a link that is highlighted at some point in time.\n * @param  {string} highlightedLink.source - id of source node for highlighted link.\n * @param  {string} highlightedLink.target - id of target node for highlighted link.\n * @param  {number} transform - value that indicates the amount of zoom transformation.\n * @returns {Object} returns an object containing the generated nodes and links that form the graph.\n * @memberof Graph/renderer\n */function renderGraph(nodes,nodeCallbacks,links,linksMatrix,linkCallbacks,config,highlightedNode,highlightedLink,transform){return{nodes:_renderNodes(nodes,nodeCallbacks,config,highlightedNode,highlightedLink,transform,linksMatrix),links:_renderLinks(nodes,links,linksMatrix,config,linkCallbacks,highlightedNode,highlightedLink,transform),defs:_memoizedRenderDefs(config)};}export{renderGraph};","map":{"version":3,"sources":["/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/src/components/Visualizer/Graph/Graph/graph/graph.renderer.jsx"],"names":["React","CONST","MARKERS","MARKER_SMALL_SIZE","MARKER_MEDIUM_OFFSET","MARKER_LARGE_OFFSET","Link","Node","Marker","buildLinkProps","buildNodeProps","getId","isNodeVisible","_renderLinks","nodes","links","linksMatrix","config","linkCallbacks","highlightedNode","highlightedLink","transform","outLinks","collapsible","filter","isHidden","map","link","source","target","sourceId","targetId","key","COORDS_SEPARATOR","props","_renderNodes","nodeCallbacks","outNodes","Object","keys","nodeId","id","_renderDefs","cachedDefs","small","medium","maxZoom","large","markerProps","markerWidth","markerHeight","MARKER_S","color","MARKER_SH","highlightColor","MARKER_M","MARKER_MH","MARKER_L","MARKER_LH","_memoizedRenderDefs","renderGraph","defs"],"mappings":"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","sourcesContent":["/**\n * @module Graph/renderer\n * @description\n * Offers a series of methods that isolate render logic for Graph component.\n */\nimport React from \"react\";\n\nimport CONST from \"./graph.const\";\nimport {\n  MARKERS,\n  MARKER_SMALL_SIZE,\n  MARKER_MEDIUM_OFFSET,\n  MARKER_LARGE_OFFSET\n} from \"../marker/marker.const\";\n\nimport Link from \"../link/Link\";\nimport Node from \"../node/Node\";\nimport Marker from \"../marker/Marker\";\nimport { buildLinkProps, buildNodeProps } from \"./graph.builder\";\nimport { getId } from \"./graph.helper\";\nimport { isNodeVisible } from \"./collapse.helper\";\n\n/**\n * Build Link components given a list of links.\n * @param  {Object.<string, Object>} nodes - same as {@link #graphrenderer|nodes in renderGraph}.\n * @param  {Array.<Object>} links - array of links {@link #Link|Link}.\n * @param  {Array.<Object>} linksMatrix - array of links {@link #Link|Link}.\n * @param  {Object} config - same as {@link #graphrenderer|config in renderGraph}.\n * @param  {Function[]} linkCallbacks - same as {@link #graphrenderer|linkCallbacks in renderGraph}.\n * @param  {string} highlightedNode - same as {@link #graphrenderer|highlightedNode in renderGraph}.\n * @param  {Object} highlightedLink - same as {@link #graphrenderer|highlightedLink in renderGraph}.\n * @param  {number} transform - value that indicates the amount of zoom transformation.\n * @returns {Array.<Object>} returns the generated array of Link components.\n * @memberof Graph/renderer\n */\nfunction _renderLinks(\n  nodes,\n  links,\n  linksMatrix,\n  config,\n  linkCallbacks,\n  highlightedNode,\n  highlightedLink,\n  transform\n) {\n  let outLinks = links;\n\n  if (config.collapsible) {\n    outLinks = outLinks.filter(({ isHidden }) => !isHidden);\n  }\n\n  return outLinks.map(link => {\n    const { source, target } = link;\n    const sourceId = getId(source);\n    const targetId = getId(target);\n    const key = `${sourceId}${CONST.COORDS_SEPARATOR}${targetId}`;\n    const props = buildLinkProps(\n      { ...link, source: `${sourceId}`, target: `${targetId}` },\n      nodes,\n      linksMatrix,\n      config,\n      linkCallbacks,\n      `${highlightedNode}`,\n      highlightedLink,\n      transform\n    );\n\n    return <Link key={key} id={key} {...props} />;\n  });\n}\n\n/**\n * Function that builds Node components.\n * @param  {Object.<string, Object>} nodes - an object containing all nodes mapped by their id.\n * @param  {Function[]} nodeCallbacks - array of callbacks for used defined event handler for node interactions.\n * @param  {Object} config - an object containing rd3g consumer defined configurations {@link #config config} for the graph.\n * @param  {string} highlightedNode - this value contains a string that represents the some currently highlighted node.\n * @param  {Object} highlightedLink - this object contains a source and target property for a link that is highlighted at some point in time.\n * @param  {string} highlightedLink.source - id of source node for highlighted link.\n * @param  {string} highlightedLink.target - id of target node for highlighted link.\n * @param  {number} transform - value that indicates the amount of zoom transformation.\n * @param  {Object.<string, Object>} linksMatrix - the matrix of connections of the graph\n * @returns {Array.<Object>} returns the generated array of node components\n * @memberof Graph/renderer\n */\nfunction _renderNodes(\n  nodes,\n  nodeCallbacks,\n  config,\n  highlightedNode,\n  highlightedLink,\n  transform,\n  linksMatrix\n) {\n  let outNodes = Object.keys(nodes);\n\n  if (config.collapsible) {\n    outNodes = outNodes.filter(nodeId =>\n      isNodeVisible(nodeId, nodes, linksMatrix)\n    );\n  }\n\n  return outNodes.map(nodeId => {\n    const props = buildNodeProps(\n      { ...nodes[nodeId], id: `${nodeId}` },\n      config,\n      nodeCallbacks,\n      highlightedNode,\n      highlightedLink,\n      transform\n    );\n\n    return <Node key={nodeId} {...props} />;\n  });\n}\n\n/**\n * Builds graph defs (for now markers, but we could also have gradients for instance).\n * NOTE: defs are static svg graphical objects, thus we only need to render them once, the result\n * is cached on the 1st call and from there we simply return the cached jsx.\n * @returns {Function} memoized build definitions function.\n * @memberof Graph/renderer\n */\nfunction _renderDefs() {\n  let cachedDefs;\n\n  return config => {\n    if (cachedDefs) {\n      return cachedDefs;\n    }\n\n    const small = MARKER_SMALL_SIZE;\n    const medium = small + (MARKER_MEDIUM_OFFSET * config.maxZoom) / 3;\n    const large = small + (MARKER_LARGE_OFFSET * config.maxZoom) / 3;\n\n    const markerProps = {\n      markerWidth: config.link.markerWidth,\n      markerHeight: config.link.markerHeight\n    };\n\n    cachedDefs = (\n      <defs>\n        <Marker\n          id={MARKERS.MARKER_S}\n          refX={small}\n          fill={config.link.color}\n          {...markerProps}\n        />\n        <Marker\n          id={MARKERS.MARKER_SH}\n          refX={small}\n          fill={config.link.highlightColor}\n          {...markerProps}\n        />\n        <Marker\n          id={MARKERS.MARKER_M}\n          refX={medium}\n          fill={config.link.color}\n          {...markerProps}\n        />\n        <Marker\n          id={MARKERS.MARKER_MH}\n          refX={medium}\n          fill={config.link.highlightColor}\n          {...markerProps}\n        />\n        <Marker\n          id={MARKERS.MARKER_L}\n          refX={large}\n          fill={config.link.color}\n          {...markerProps}\n        />\n        <Marker\n          id={MARKERS.MARKER_LH}\n          refX={large}\n          fill={config.link.highlightColor}\n          {...markerProps}\n        />\n      </defs>\n    );\n\n    return cachedDefs;\n  };\n}\n\n/**\n * Memoized reference for _renderDefs.\n * @param  {Object} config - an object containing rd3g consumer defined configurations {@link #config config} for the graph.\n * @returns {Object} graph reusable objects [defs](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs).\n * @memberof Graph/renderer\n */\nconst _memoizedRenderDefs = _renderDefs();\n\n/**\n * Method that actually is exported an consumed by Graph component in order to build all Nodes and Link\n * components.\n * @param  {Object.<string, Object>} nodes - an object containing all nodes mapped by their id.\n * @param  {Function[]} nodeCallbacks - array of callbacks for used defined event handler for node interactions.\n * @param  {Array.<Object>} links - array of links {@link #Link|Link}.\n * @param  {Object.<string, Object>} linksMatrix - an object containing a matrix of connections of the graph, for each nodeId,\n * there is an Object that maps adjacent nodes ids (string) and their values (number).\n * ```javascript\n *  // links example\n *  {\n *     \"Androsynth\": {\n *         \"Chenjesu\": 1,\n *         \"Ilwrath\": 1,\n *         \"Mycon\": 1,\n *         \"Spathi\": 1,\n *         \"Umgah\": 1,\n *         \"VUX\": 1,\n *         \"Guardian\": 1\n *     },\n *     \"Chenjesu\": {\n *         \"Androsynth\": 1,\n *         \"Mycon\": 1,\n *         \"Spathi\": 1,\n *         \"Umgah\": 1,\n *         \"VUX\": 1,\n *         \"Broodhmome\": 1\n *     },\n *     ...\n *  }\n * ```\n * @param  {Function[]} linkCallbacks - array of callbacks for used defined event handler for link interactions.\n * @param  {Object} config - an object containing rd3g consumer defined configurations {@link #config config} for the graph.\n * @param  {string} highlightedNode - this value contains a string that represents the some currently highlighted node.\n * @param  {Object} highlightedLink - this object contains a source and target property for a link that is highlighted at some point in time.\n * @param  {string} highlightedLink.source - id of source node for highlighted link.\n * @param  {string} highlightedLink.target - id of target node for highlighted link.\n * @param  {number} transform - value that indicates the amount of zoom transformation.\n * @returns {Object} returns an object containing the generated nodes and links that form the graph.\n * @memberof Graph/renderer\n */\nfunction renderGraph(\n  nodes,\n  nodeCallbacks,\n  links,\n  linksMatrix,\n  linkCallbacks,\n  config,\n  highlightedNode,\n  highlightedLink,\n  transform\n) {\n  return {\n    nodes: _renderNodes(\n      nodes,\n      nodeCallbacks,\n      config,\n      highlightedNode,\n      highlightedLink,\n      transform,\n      linksMatrix\n    ),\n    links: _renderLinks(\n      nodes,\n      links,\n      linksMatrix,\n      config,\n      linkCallbacks,\n      highlightedNode,\n      highlightedLink,\n      transform\n    ),\n    defs: _memoizedRenderDefs(config)\n  };\n}\n\nexport { renderGraph };\n"]},"metadata":{},"sourceType":"module"}