{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/LeftWindow/LeftWindow.jsx\";\nimport React, { useState } from 'react';\nimport './LeftWindow.css';\nimport { Dropdown, InputGroup } from 'react-bootstrap';\n\nconst LeftWindow = props => {\n  //Property States \n  const [nSize, setnSize] = useState('');\n  const [nColor, setnColor] = useState('');\n  const [lColor, setlColor] = useState(''); //Event Handler\n\n  const inputHandler = event => {\n    //prevent the forn submission from refreshing the page\n    event.preventDefault(); //Pass states to GraphVisualizer\n\n    props.nSize(nSize);\n    props.nColor(nColor);\n    props.lColor(lColor); //reset inputs\n    //setName('')\n  };\n\n  return React.createElement(\"div\", {\n    class: \"leftWindow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    className: \"input-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(InputGroup.Checkbox, {\n    \"aria-label\": \"Checkbox for following text input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), React.createElement(\"h5\", {\n    class: \"font-weight-light pt-3 h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Node Size \"), React.createElement(\"div\", {\n    class: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"nSize\",\n    id: \"nSize\",\n    type: \"text\",\n    name: \"nodeSize\",\n    placeholder: 'text',\n    onChange: e => setnSize(document.getElementById('nSize').value) //onKeyPress={}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    class: \"font-weight-light h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Node Color \"), React.createElement(\"div\", {\n    class: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"nColor\",\n    id: \"nColor\",\n    type: \"text\",\n    name: \"nodeColor\",\n    placeholder: 'text',\n    onChange: e => setnColor(document.getElementById('nColor').value) //onKeyPress={this._handleLinkKeyEnter}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    class: \"font-weight-light h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Link Color \"), React.createElement(\"div\", {\n    class: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"lColor\",\n    id: \"lColor\",\n    type: \"text\",\n    name: \"linkColor\",\n    placeholder: 'text',\n    onChange: e => setlColor(document.getElementById('lColor').value) //onKeyPress={this._handleLinkKeyEnter}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Dropdown, {\n    class: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"info\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Algorithm\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Depth-First Search\"), React.createElement(Dropdown.Item, {\n    evenyKey: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Breadth-First Search\"), React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Dijkstra's\"))), React.createElement(\"h5\", {\n    class: \"font-weight-light h6 pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" Start Node \"), React.createElement(\"div\", {\n    class: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"lColor\",\n    id: \"lColor\",\n    type: \"text\",\n    name: \"linkColor\",\n    placeholder: 'text',\n    onChange: e => setlColor(document.getElementById('lColor').value) //onKeyPress={this._handleLinkKeyEnter}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    class: \"font-weight-light h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \" Target Node \"), React.createElement(\"div\", {\n    class: \"input-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"lColor\",\n    id: \"lColor\",\n    type: \"text\",\n    name: \"linkColor\",\n    placeholder: 'text',\n    onChange: e => setlColor(document.getElementById('lColor').value) //onKeyPress={this._handleLinkKeyEnter}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    class: \"submit\",\n    type: \"submit\",\n    value: \"Start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })));\n};\n\nexport default LeftWindow;\n/*Name and Target with hooks\n\nconst Input = ({createNode, handleConfig}) => {\n const [name, setName] = useState('')\n const [color, setColor] = useState('')\n const [target, setTarget] = useState('')\n const inputHandler = (event) => {\n        //prevent the forn submission from refreshing the page\n        event.preventDefault() \n        console.log(target)\n        createNode(name, target)\n        Config(color)\n\n        //reset inputs\n        setName('')\n    }\n\n\n    return(\n        <div className='form grid'>\n            <form onSubmit={inputHandler}>\n                \n                <label class='nameL' htmlFor='name'>Name</label>\n                <input\n                    class='name'\n                    type='text'\n                    label=\"Name\"\n                    value={name}\n                    placeholder='Enter a Name'\n                    required onChange={(e) => setName(e.target.value)}\n                />\n             \n                <select class='color' id='color' onChange={ (e) => setColor(document.getElementById('color').value)}>\n                    <option value='default'>Color</option>\n                    <option value='lightgreen'>lightgreen</option>\n                    <option value='blue'>blue</option>\n                    <option value='red'>red</option>\n                    <option value='orange'>orange</option>\n                    <option value='purple'>purple</option>\n                    <option value='yellow'>yellow</option>\n                </select>\n\n\n                <select class='connect' id='connect' onChange={ (e) => setTarget(document.getElementById('connect').value)}>\n                    <option value='default'>Target</option>\n                    <option value='Harry'>Harry</option>\n                    <option value='Sally'>Sally</option>\n                    <option value='Alice'>Alice</option>\n                </select>\n\n            <input class='submit' type='submit' value='Create Node'/>\n            </form>\n        </div>\n    )\n}\n\n\n    <h5 class=\"font-weight-light pt-3\"> Node Size </h5>\n            <div class=\"input-group mb-3\">\n                <input\n                class=\"linkInput\"\n                type=\"text\"\n                name=\"addLink\"\n                placeholder={}\n                value={}\n                onChange={}\n                onKeyPress={}\n                />\n            </div>\n*/","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/LeftWindow/LeftWindow.jsx"],"names":["React","useState","Dropdown","InputGroup","LeftWindow","props","nSize","setnSize","nColor","setnColor","lColor","setlColor","inputHandler","event","preventDefault","e","document","getElementById","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './LeftWindow.css'\nimport {Dropdown, InputGroup} from 'react-bootstrap'\n\nconst LeftWindow = (props) => {\n\n    //Property States \n    const [nSize, setnSize] = useState('')\n    const [nColor, setnColor] = useState('')\n    const [lColor, setlColor] = useState('')\n\n    //Event Handler\n    const inputHandler = (event) => {\n        //prevent the forn submission from refreshing the page\n        event.preventDefault() \n        \n        //Pass states to GraphVisualizer\n        props.nSize(nSize) \n        props.nColor(nColor)\n        props.lColor(lColor)\n\n        //reset inputs\n        //setName('')\n    } \n\n\n    return(\n        <div class=\"leftWindow\">\n            <form onSubmit={inputHandler}>\n\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend className=\"input-group-text\">\n                    <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\n                </InputGroup.Prepend>\n            </InputGroup>\n\n            <h5 class=\"font-weight-light pt-3 h6\"> Node Size </h5>\n                <div class=\"input-group mb-3\">\n                    <input\n                    class=\"nSize\"\n                    id='nSize'\n                    type=\"text\"\n                    name=\"nodeSize\"\n                    placeholder={'text'}\n                    onChange={(e) => setnSize(document.getElementById('nSize').value)}\n                    //onKeyPress={}\n                    />\n                </div>\n                \n                <h5 class=\"font-weight-light h6\"> Node Color </h5>\n                <div class=\"input-group mb-3\">\n                    <input\n                    class=\"nColor\"\n                    id='nColor'\n                    type=\"text\"\n                    name=\"nodeColor\"\n                    placeholder={'text'}\n                    onChange={(e) => setnColor(document.getElementById('nColor').value)}\n                    //onKeyPress={this._handleLinkKeyEnter}\n                    />\n                </div>\n\n                <h5 class=\"font-weight-light h6\"> Link Color </h5>\n                <div class=\"input-group mb-3\">\n                    <input\n                    class=\"lColor\"\n                    id='lColor'\n                    type=\"text\"\n                    name=\"linkColor\"\n                    placeholder={'text'}\n                    onChange={(e) => setlColor(document.getElementById('lColor').value)}\n                    //onKeyPress={this._handleLinkKeyEnter}\n                    />\n                </div>\n\n                <Dropdown class='dropdown'>\n                    <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n                        Algorithm\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"1\">Depth-First Search</Dropdown.Item>\n                        <Dropdown.Item evenyKey=\"2\">Breadth-First Search</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">Dijkstra's</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h5 class=\"font-weight-light h6 pt-3\"> Start Node </h5>\n                <div class=\"input-group mb-3\">\n                    <input\n                    class=\"lColor\"\n                    id='lColor'\n                    type=\"text\"\n                    name=\"linkColor\"\n                    placeholder={'text'}\n                    onChange={(e) => setlColor(document.getElementById('lColor').value)}\n                    //onKeyPress={this._handleLinkKeyEnter}\n                    />\n                </div>\n\n                <h5 class=\"font-weight-light h6\"> Target Node </h5>\n                <div class=\"input-group mb-3\">\n                    <input\n                    class=\"lColor\"\n                    id='lColor'\n                    type=\"text\"\n                    name=\"linkColor\"\n                    placeholder={'text'}\n                    onChange={(e) => setlColor(document.getElementById('lColor').value)}\n                    //onKeyPress={this._handleLinkKeyEnter}\n                    />\n                </div>\n\n\n            <input class='submit' type='submit' value='Start'/>\n        </form>\n        </div>\n    )\n}\n\nexport default LeftWindow\n\n\n\n\n\n/*Name and Target with hooks\n\nconst Input = ({createNode, handleConfig}) => {\n const [name, setName] = useState('')\n const [color, setColor] = useState('')\n const [target, setTarget] = useState('')\n const inputHandler = (event) => {\n        //prevent the forn submission from refreshing the page\n        event.preventDefault() \n        console.log(target)\n        createNode(name, target)\n        Config(color)\n\n        //reset inputs\n        setName('')\n    }\n\n\n    return(\n        <div className='form grid'>\n            <form onSubmit={inputHandler}>\n                \n                <label class='nameL' htmlFor='name'>Name</label>\n                <input\n                    class='name'\n                    type='text'\n                    label=\"Name\"\n                    value={name}\n                    placeholder='Enter a Name'\n                    required onChange={(e) => setName(e.target.value)}\n                />\n             \n                <select class='color' id='color' onChange={ (e) => setColor(document.getElementById('color').value)}>\n                    <option value='default'>Color</option>\n                    <option value='lightgreen'>lightgreen</option>\n                    <option value='blue'>blue</option>\n                    <option value='red'>red</option>\n                    <option value='orange'>orange</option>\n                    <option value='purple'>purple</option>\n                    <option value='yellow'>yellow</option>\n                </select>\n\n\n                <select class='connect' id='connect' onChange={ (e) => setTarget(document.getElementById('connect').value)}>\n                    <option value='default'>Target</option>\n                    <option value='Harry'>Harry</option>\n                    <option value='Sally'>Sally</option>\n                    <option value='Alice'>Alice</option>\n                </select>\n\n            <input class='submit' type='submit' value='Create Node'/>\n            </form>\n        </div>\n    )\n}\n\n\n    <h5 class=\"font-weight-light pt-3\"> Node Size </h5>\n            <div class=\"input-group mb-3\">\n                <input\n                class=\"linkInput\"\n                type=\"text\"\n                name=\"addLink\"\n                placeholder={}\n                value={}\n                onChange={}\n                onKeyPress={}\n                />\n            </div>\n*/"]},"metadata":{},"sourceType":"module"}