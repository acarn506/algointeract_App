{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Node/Draggable.jsx\";\nimport React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\n\nclass Draggable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Are we dragging bool\n      isDragging: false,\n      //coordinates of first mouse click\n      originalX: 0,\n      originalY: 0,\n      //stores translation\n      translateX: 0,\n      translateY: 0,\n      //coordinates of where dragging stopped\n      lastTranslateX: 0,\n      lastTranslateY: 0\n    };\n  }\n\n  render() {\n    //children being components being wrapped by this component - in our case Node components\n    const {\n      children\n    } = this.props; //state that is being passed to the wrapped component  \n\n    const {\n      translateX,\n      translateY,\n      isDragging\n    } = this.state;\n    return React.createElement(Container, {\n      onMouseDown: this.handleMouseDown,\n      x: translateX,\n      y: translateY,\n      isDragging: isDragging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, children);\n  }\n\n} //styled div that is our wrapper\n\n\nconst Container = styled.div.attrs({\n  style: ({\n    x,\n    y\n  }) => ({\n    transform: `translate(${x}px, ${y}px)`\n  })\n})`\n    cursor: grab;\n\n    ${({\n  isDragging\n}) => isDragging && css`\n        opacity: 0.8;\n        cursor: grabbing;\n    `};\n`;\nexport default Draggable;","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Node/Draggable.jsx"],"names":["React","Component","styled","css","Draggable","state","isDragging","originalX","originalY","translateX","translateY","lastTranslateX","lastTranslateY","render","children","props","handleMouseDown","Container","div","attrs","style","x","y","transform"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BI,KAF8B,GAEtB;AACJ;AACAC,MAAAA,UAAU,EAAE,KAFR;AAGJ;AACAC,MAAAA,SAAS,EAAE,CAJP;AAKJC,MAAAA,SAAS,EAAE,CALP;AAMJ;AACAC,MAAAA,UAAU,EAAE,CAPR;AAQJC,MAAAA,UAAU,EAAE,CARR;AASJ;AACAC,MAAAA,cAAc,EAAE,CAVZ;AAWJC,MAAAA,cAAc,EAAE;AAXZ,KAFsB;AAAA;;AAgB9BC,EAAAA,MAAM,GAAI;AACN;AACA,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAxB,CAFM,CAGN;;AACA,UAAM;AAACN,MAAAA,UAAD;AAAaC,MAAAA,UAAb;AAAyBJ,MAAAA;AAAzB,QAAuC,KAAKD,KAAlD;AAEA,WACI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAE,KAAKW,eADtB;AAEI,MAAA,CAAC,EAAEP,UAFP;AAGI,MAAA,CAAC,EAAEC,UAHP;AAII,MAAA,UAAU,EAAEJ,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKQ,QANL,CADJ;AAUH;;AAhC6B,C,CAmClC;;;AACA,MAAMG,SAAS,GAAGf,MAAM,CAACgB,GAAP,CAAWC,KAAX,CAAiB;AAC/BC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,GAAD,MAAa;AAChBC,IAAAA,SAAS,EAAG,aAAYF,CAAE,OAAMC,CAAE;AADlB,GAAb;AADwB,CAAjB,CAIf;;;MAGG,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KACFA,UAAU,IAAIH,GAAI;;;KAGhB;CAXN;AAcA,eAAeC,SAAf","sourcesContent":["import React, {Component} from 'react'\nimport styled, {css} from 'styled-components'\n\nclass Draggable extends Component {\n\n    state = {\n        //Are we dragging bool\n        isDragging: false,\n        //coordinates of first mouse click\n        originalX: 0, \n        originalY: 0,\n        //stores translation\n        translateX: 0,\n        translateY: 0,\n        //coordinates of where dragging stopped\n        lastTranslateX: 0,\n        lastTranslateY: 0\n    }\n\n    render () {\n        //children being components being wrapped by this component - in our case Node components\n        const {children} = this.props;\n        //state that is being passed to the wrapped component  \n        const {translateX, translateY, isDragging} = this.state;\n\n        return (\n            <Container\n                onMouseDown={this.handleMouseDown}\n                x={translateX}\n                y={translateY}\n                isDragging={isDragging}\n            >\n                {children}\n            </Container>\n        );\n    }\n}\n\n//styled div that is our wrapper\nconst Container = styled.div.attrs({\n    style: ({x, y}) => ({\n        transform: `translate(${x}px, ${y}px)`\n    }),\n})`\n    cursor: grab;\n\n    ${({ isDragging}) =>\n    isDragging && css`\n        opacity: 0.8;\n        cursor: grabbing;\n    `};\n`;\n\nexport default Draggable"]},"metadata":{},"sourceType":"module"}