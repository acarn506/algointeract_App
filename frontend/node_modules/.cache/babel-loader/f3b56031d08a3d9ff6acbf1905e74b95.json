{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Node/Node.jsx\";\nimport React from 'react';\nimport './Node.css';\n\nconst Node = () => {\n  /* let nodeElem = document.getElementById('container')\n   let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n   console.log(nodeElem)\n    const dragElement = elem => {\n       console.log(elem)\n       console.log(elem.id)\n       if (document.getElementById(elem.id + 'Node')) {\n           document.getElementById(elem.id + 'Node').onmousedown = dragMouseDown;\n       }\n       else {\n           elem.onmousedown = dragMouseDown\n       }\n       \n   } \n    const dragMouseDown = e => {\n       e = e || window.event;\n       e.preventDefault();\n       //set mouse cursor at starting position\n       pos3 = e.clientX;\n       pos4 = e.clientY;\n       document.onmouseup = closeDragElement;\n       document.onmousemove = elementDrag;\n   }\n    const elementDrag = e => {\n       e = e || window.event;\n       e.preventDefault();\n       //calculate new cursor position \n       pos1 = pos3 - e.clientX;\n       pos2 = pos4 - e.clientX;\n       pos3 = e.clientX;\n       pos4 = e.clientY;\n       //set new position \n       nodeElem.style.top = (nodeElem.offsetTop - pos2) + 'px';\n       nodeElem.style.left = (nodeElem.offsetLeft  - pos1) + 'px';\n   } \n    const closeDragElement = () => {\n       //stop moving when mouse button is released\n       document.onmouseup = null;\n       document.onmousemove = null;\n   } */\n  return React.createElement(\"div\", {\n    id: \"container\",\n    className: \"circle-container\",\n    onClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"containerNode\",\n    className: \"circle center shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default Node;","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Node/Node.jsx"],"names":["React","Node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAEhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CC,SACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,SAAS,EAAC,kBAA9B;AAAiD,IAAA,OAAO,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,eAAR;AAAwB,IAAA,SAAS,EAAC,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CApDD;;AAsDA,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport './Node.css'\n\n\nconst Node = () => {\n\n   /* let nodeElem = document.getElementById('container')\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n    console.log(nodeElem)\n\n    const dragElement = elem => {\n        console.log(elem)\n        console.log(elem.id)\n        if (document.getElementById(elem.id + 'Node')) {\n            document.getElementById(elem.id + 'Node').onmousedown = dragMouseDown;\n        }\n        else {\n            elem.onmousedown = dragMouseDown\n        }\n        \n    } \n\n    const dragMouseDown = e => {\n        e = e || window.event;\n        e.preventDefault();\n        //set mouse cursor at starting position\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        document.onmouseup = closeDragElement;\n        document.onmousemove = elementDrag;\n    }\n\n    const elementDrag = e => {\n        e = e || window.event;\n        e.preventDefault();\n        //calculate new cursor position \n        pos1 = pos3 - e.clientX;\n        pos2 = pos4 - e.clientX;\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        //set new position \n        nodeElem.style.top = (nodeElem.offsetTop - pos2) + 'px';\n        nodeElem.style.left = (nodeElem.offsetLeft  - pos1) + 'px';\n    } \n\n    const closeDragElement = () => {\n        //stop moving when mouse button is released\n        document.onmouseup = null;\n        document.onmousemove = null;\n    } */ \n\n    return(\n        <div id='container' className='circle-container' onClick>\n            <div id='containerNode' className='circle center shadow'></div>\n        </div>\n    )\n}\n\nexport default Node"]},"metadata":{},"sourceType":"module"}