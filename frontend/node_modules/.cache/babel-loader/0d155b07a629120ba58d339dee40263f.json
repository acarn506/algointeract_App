{"ast":null,"code":"var _jsxFileName = \"/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Node/Node.jsx\";\nimport React from 'react';\nimport './Node.css';\n\nconst Node = () => {\n  let nodeElem = document.getElementById('container');\n  let pos1 = 0,\n      pos2 = 0,\n      pos3 = 0,\n      pos4 = 0;\n\n  const dragElement = elem => {\n    console.log(elem);\n    console.log(elem.id);\n\n    if (document.getElementById(elem.id + 'Node')) {\n      document.getElementById(elem.id + 'Node').onmousedown = dragMouseDown;\n    } else {\n      elem.onmousedown = dragMouseDown;\n    }\n  };\n\n  const dragMouseDown = e => {\n    e = e || window.event;\n    e.preventDefault(); //set mouse cursor at starting position\n\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onmouseup = closeDragElement;\n    document.onmousemove = elementDrag;\n  };\n\n  const elementDrag = e => {\n    e = e || window.event;\n    e.preventDefault(); //calculate new cursor position \n\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientX;\n    pos3 = e.clientX;\n    pos4 = e.clientY; //set new position \n\n    nodeElem.style.top = nodeElem.offsetTop - pos2 + 'px';\n    nodeElem.style.left = nodeElem.offsetLeft - pos1 + 'px';\n  };\n\n  const closeDragElement = () => {\n    //stop moving when mouse button is released\n    document.onmouseup = null;\n    document.onmousemove = null;\n  };\n\n  return React.createElement(\"div\", {\n    id: \"container\",\n    className: \"circle-container\",\n    onClick: dragElement(nodeElem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"containerNode\",\n    className: \"circle center shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nexport default Node;","map":{"version":3,"sources":["/Users/acarn506/Desktop/SWE-Project/s2020-djma/algo_interact/frontend/src/components/Node/Node.jsx"],"names":["React","Node","nodeElem","document","getElementById","pos1","pos2","pos3","pos4","dragElement","elem","console","log","id","onmousedown","dragMouseDown","e","window","event","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAEf,MAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAf;AACA,MAAIC,IAAI,GAAG,CAAX;AAAA,MAAcC,IAAI,GAAG,CAArB;AAAA,MAAwBC,IAAI,GAAG,CAA/B;AAAA,MAAkCC,IAAI,GAAG,CAAzC;;AAEA,QAAMC,WAAW,GAAGC,IAAI,IAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB;;AACA,QAAIV,QAAQ,CAACC,cAAT,CAAwBM,IAAI,CAACG,EAAL,GAAU,MAAlC,CAAJ,EAA+C;AAC3CV,MAAAA,QAAQ,CAACC,cAAT,CAAwBM,IAAI,CAACG,EAAL,GAAU,MAAlC,EAA0CC,WAA1C,GAAwDC,aAAxD;AACH,KAFD,MAGK;AACDL,MAAAA,IAAI,CAACI,WAAL,GAAmBC,aAAnB;AACH;AAEJ,GAVD;;AAYA,QAAMA,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAhB;AACAF,IAAAA,CAAC,CAACG,cAAF,GAFuB,CAGvB;;AACAZ,IAAAA,IAAI,GAAGS,CAAC,CAACI,OAAT;AACAZ,IAAAA,IAAI,GAAGQ,CAAC,CAACK,OAAT;AACAlB,IAAAA,QAAQ,CAACmB,SAAT,GAAqBC,gBAArB;AACApB,IAAAA,QAAQ,CAACqB,WAAT,GAAuBC,WAAvB;AACH,GARD;;AAUA,QAAMA,WAAW,GAAGT,CAAC,IAAI;AACrBA,IAAAA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAhB;AACAF,IAAAA,CAAC,CAACG,cAAF,GAFqB,CAGrB;;AACAd,IAAAA,IAAI,GAAGE,IAAI,GAAGS,CAAC,CAACI,OAAhB;AACAd,IAAAA,IAAI,GAAGE,IAAI,GAAGQ,CAAC,CAACI,OAAhB;AACAb,IAAAA,IAAI,GAAGS,CAAC,CAACI,OAAT;AACAZ,IAAAA,IAAI,GAAGQ,CAAC,CAACK,OAAT,CAPqB,CAQrB;;AACAnB,IAAAA,QAAQ,CAACwB,KAAT,CAAeC,GAAf,GAAsBzB,QAAQ,CAAC0B,SAAT,GAAqBtB,IAAtB,GAA8B,IAAnD;AACAJ,IAAAA,QAAQ,CAACwB,KAAT,CAAeG,IAAf,GAAuB3B,QAAQ,CAAC4B,UAAT,GAAuBzB,IAAxB,GAAgC,IAAtD;AACH,GAXD;;AAaA,QAAMkB,gBAAgB,GAAG,MAAM;AAC3B;AACApB,IAAAA,QAAQ,CAACmB,SAAT,GAAqB,IAArB;AACAnB,IAAAA,QAAQ,CAACqB,WAAT,GAAuB,IAAvB;AACH,GAJD;;AAMA,SACI;AAAK,IAAA,EAAE,EAAE,WAAT;AAAqB,IAAA,SAAS,EAAC,kBAA/B;AAAkD,IAAA,OAAO,EAAEf,WAAW,CAACP,QAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,eAAR;AAAwB,IAAA,SAAS,EAAC,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAnDD;;AAqDA,eAAeD,IAAf","sourcesContent":["import React from 'react'\nimport './Node.css'\n\n\nconst Node = () => {\n\n    let nodeElem = document.getElementById('container')\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n\n    const dragElement = elem => {\n        console.log(elem)\n        console.log(elem.id)\n        if (document.getElementById(elem.id + 'Node')) {\n            document.getElementById(elem.id + 'Node').onmousedown = dragMouseDown;\n        }\n        else {\n            elem.onmousedown = dragMouseDown\n        }\n        \n    } \n\n    const dragMouseDown = e => {\n        e = e || window.event;\n        e.preventDefault();\n        //set mouse cursor at starting position\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        document.onmouseup = closeDragElement;\n        document.onmousemove = elementDrag;\n    }\n\n    const elementDrag = e => {\n        e = e || window.event;\n        e.preventDefault();\n        //calculate new cursor position \n        pos1 = pos3 - e.clientX;\n        pos2 = pos4 - e.clientX;\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        //set new position \n        nodeElem.style.top = (nodeElem.offsetTop - pos2) + 'px';\n        nodeElem.style.left = (nodeElem.offsetLeft  - pos1) + 'px';\n    } \n\n    const closeDragElement = () => {\n        //stop moving when mouse button is released\n        document.onmouseup = null;\n        document.onmousemove = null;\n    }\n\n    return(\n        <div id ='container' className='circle-container' onClick={dragElement(nodeElem)}>\n            <div id='containerNode' className='circle center shadow'></div>\n        </div>\n    )\n}\n\nexport default Node"]},"metadata":{},"sourceType":"module"}