{"ast":null,"code":"import _slicedToArray from\"/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Tabs,Tab}from\"react-bootstrap\";import\"./AlgoTab.css\";import Algorithm from\"./Algorithm\";//Renders Selected Algorithm\nvar AlgoTab=function AlgoTab(props){//sets current algorithm tab\nvar dataStructure;if(!props.dataStructure)dataStructure=\"Graph\";else dataStructure=Object.values(props.dataStructure)[0];var _useState=useState(dataStructure),_useState2=_slicedToArray(_useState,2),tabKey=_useState2[0],setTabkey=_useState2[1];console.log(dataStructure);//Update tab key state\nvar keyHandler=function keyHandler(event){setTabkey(event);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{class:\"Tab\"},/*#__PURE__*/React.createElement(Tabs,{className:\"tabs\",activeKey:tabKey,onSelect:function onSelect(event){return keyHandler(event);}},/*#__PURE__*/React.createElement(Tab,{eventKey:\"Graph\",title:\"Graph\"}),/*#__PURE__*/React.createElement(Tab,{eventKey:\"Tree\",title:\"Tree\"}),/*#__PURE__*/React.createElement(Tab,{eventKey:\"LinkedList\",title:\"Linked List\"}))),/*#__PURE__*/React.createElement(Algorithm,{algoKey:tabKey}));};export default AlgoTab;","map":{"version":3,"sources":["/Users/anthonycarnero/Documents/GitHub/algointeract_App/frontend/src/components/AlgoTab/AlgoTab.jsx"],"names":["React","useState","Tabs","Tab","Algorithm","AlgoTab","props","dataStructure","Object","values","tabKey","setTabkey","console","log","keyHandler","event"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB;AACA,GAAIC,CAAAA,aAAJ,CACA,GAAI,CAACD,KAAK,CAACC,aAAX,CAA0BA,aAAa,CAAG,OAAhB,CAA1B,IACKA,CAAAA,aAAa,CAAGC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACC,aAApB,EAAmC,CAAnC,CAAhB,CACL,cAA4BN,QAAQ,CAACM,aAAD,CAApC,wCAAOG,MAAP,eAAeC,SAAf,eAEAC,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAEA;AACA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5BJ,SAAS,CAACI,KAAD,CAAT,CACD,CAFD,CAIA,mBACE,4CACE,2BAAK,KAAK,CAAC,KAAX,eACE,oBAAC,IAAD,EACE,SAAS,CAAC,MADZ,CAEE,SAAS,CAAEL,MAFb,CAGE,QAAQ,CAAE,kBAACK,KAAD,QAAWD,CAAAA,UAAU,CAACC,KAAD,CAArB,EAHZ,eAKE,oBAAC,GAAD,EAAK,QAAQ,CAAC,OAAd,CAAsB,KAAK,CAAC,OAA5B,EALF,cAME,oBAAC,GAAD,EAAK,QAAQ,CAAC,MAAd,CAAqB,KAAK,CAAC,MAA3B,EANF,cAOE,oBAAC,GAAD,EAAK,QAAQ,CAAC,YAAd,CAA2B,KAAK,CAAC,aAAjC,EAPF,CADF,CADF,cAaE,oBAAC,SAAD,EAAW,OAAO,CAAEL,MAApB,EAbF,CADF,CAiBD,CA/BD,CAiCA,cAAeL,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport \"./AlgoTab.css\";\nimport Algorithm from \"./Algorithm\";\n\n//Renders Selected Algorithm\nconst AlgoTab = (props) => {\n  //sets current algorithm tab\n  var dataStructure;\n  if (!props.dataStructure) dataStructure = \"Graph\";\n  else dataStructure = Object.values(props.dataStructure)[0];\n  const [tabKey, setTabkey] = useState(dataStructure);\n\n  console.log(dataStructure);\n\n  //Update tab key state\n  const keyHandler = (event) => {\n    setTabkey(event);\n  };\n\n  return (\n    <div>\n      <div class=\"Tab\">\n        <Tabs\n          className=\"tabs\"\n          activeKey={tabKey}\n          onSelect={(event) => keyHandler(event)}\n        >\n          <Tab eventKey=\"Graph\" title=\"Graph\"></Tab>\n          <Tab eventKey=\"Tree\" title=\"Tree\"></Tab>\n          <Tab eventKey=\"LinkedList\" title=\"Linked List\"></Tab>\n        </Tabs>\n      </div>\n\n      <Algorithm algoKey={tabKey} />\n    </div>\n  );\n};\n\nexport default AlgoTab;\n"]},"metadata":{},"sourceType":"module"}